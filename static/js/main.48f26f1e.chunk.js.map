{"version":3,"sources":["components/Home.js","components/Join.js","models/Colors.js","components/WordBox.js","components/Clue.js","components/GameRoom.js","App.js","reportWebVitals.js","index.js"],"names":["Home","db","className","Typography","align","variant","to","style","textDecoration","Button","color","Accordion","AccordionSummary","expandIcon","ExpandMore","aria-controls","id","AccordionDetails","Join","currentUser","updateCurrentUserInDB","useState","isValid","setIsValid","nickname","setNickname","handleJoinRoomBtn","alert","fontSize","noValidate","autoComplete","TextField","label","value","onChange","e","target","trim","length","onClick","colors","WordBox","backgroundColor","borderColor","word","team","isRevealed","idx","classes","textColor","Grid","item","Paper","paper","background","border","Clue","clue","guesses","fontWeight","toUpperCase","useStyles","makeStyles","theme","window","padding","height","width","textAlign","minWidth","cursor","row","display","flex","justifyContent","alignItems","GameRoom","users","GAME_STATE","hasWon","currentRound","clues","isSpymasterTyping","words","redTeamRemainingCards","blueTeamRemainingCards","updateGameStateInDB","updateCurrentRoundInDB","updateIsSpymasterTypingInDB","addClueToDB","updateWordInDB","updateRedTeamRemainingCards","updateBlueTeamRemainingCards","updateClueInDB","updateHasWonInDB","currentClue","setCurrentClue","switchTurns","handleWordClick","parentElement","getAttribute","role","endGame","setTimeout","useEffect","Card","CardContent","Box","mt","mb","filter","u","map","Fragment","borderRadius","user","container","spacing","xs","justify","prevState","FormControl","InputLabel","Select","MenuItem","redOperative","redSpymaster","blueOperative","blueSpymaster","App","uuidv4","firebase","database","setGameState","setHasWon","setWords","setCurrentRound","setIsSpymasterTyping","setRedTeamRemainingCards","setBlueTeamRemainingCards","setCurrentUser","setUsers","setClues","a","ref","get","console","log","Object","values","val","set","isTyping","remove","goOnline","loadUsers","on","snapshot","parseInt","data","require","randIdx","Math","floor","random","shuffle","i","loadWords","w","onDisconnect","off","path","round","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.48f26f1e.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../stylesheets/Home.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n\tButton,\r\n\tAccordion,\r\n\tAccordionSummary,\r\n\tTypography,\r\n\tAccordionDetails\r\n} from '@material-ui/core';\r\nimport { ExpandMore } from '@material-ui/icons';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction Home({ db }) {\r\n\treturn (\r\n\t\t<div className=\"main\">\r\n\t\t\t{/* Title and Author */}\r\n\t\t\t<div className=\"col center\">\r\n\t\t\t\t<Typography align=\"center\" variant=\"h3\">\r\n\t\t\t\t\tCodenames\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography align=\"center\" variant=\"h6\">\r\n\t\t\t\t\tby Jason Cheung\r\n\t\t\t\t</Typography>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* Create Game Button */}\r\n\t\t\t<div className=\"row center\">\r\n\t\t\t\t<Link to=\"/join\" style={{ textDecoration: 'none' }}>\r\n\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" className=\"btn\">\r\n\t\t\t\t\t\tJoin Room\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* Instructions */}\r\n\t\t\t<div className=\"row center\">\r\n\t\t\t\t<Accordion className=\"accordion\">\r\n\t\t\t\t\t<AccordionSummary\r\n\t\t\t\t\t\texpandIcon={<ExpandMore />}\r\n\t\t\t\t\t\taria-controls=\"panel1a-content\"\r\n\t\t\t\t\t\tid=\"panel1a-header\">\r\n\t\t\t\t\t\t<Typography>Instructions</Typography>\r\n\t\t\t\t\t</AccordionSummary>\r\n\t\t\t\t\t<AccordionDetails>\r\n\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t1. Click on the JOIN ROOM button.\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t2. Enter your nickname and start the game.\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography>3. Connect with your friends.</Typography>\r\n\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t4. Share the room URL with your friends.\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography>5. Enjoy the game!</Typography>\r\n\t\t\t\t\t</AccordionDetails>\r\n\t\t\t\t</Accordion>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../stylesheets/Join.scss\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { TextField, Button, Typography } from \"@material-ui/core\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport firebase from \"firebase/app\";\r\n\r\nfunction Join({ currentUser, updateCurrentUserInDB }) {\r\n\tconst [isValid, setIsValid] = useState(false);\r\n\tconst [nickname, setNickname] = useState(\"\");\r\n\r\n\t// async function getGameState() {\r\n\t// \treturn await parseInt(db.ref().child('GAME_STATE').get());\r\n\t// }\r\n\r\n\tfunction handleNickname(e) {\r\n\t\tlet value = e.target.value.trim();\r\n\t\tsetIsValid(value.length > 0);\r\n\t\tsetNickname(value);\r\n\t}\r\n\r\n\tfunction handleJoinRoomBtn() {\r\n\t\t// Check if nickname is empty\r\n\t\tif (!isValid) {\r\n\t\t\talert(\"Please enter a valid nickname\");\r\n\t\t} else {\r\n\t\t\tupdateCurrentUserInDB({\r\n\t\t\t\t...currentUser,\r\n\t\t\t\tnickname\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t// function\r\n\r\n\treturn (\r\n\t\t<div className='window'>\r\n\t\t\t<div className='group-box'>\r\n\t\t\t\t<Typography variant='h5' align='center'>\r\n\t\t\t\t\tWelcome to Codenames\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography style={{ fontSize: \"15px\" }} align='center'>\r\n\t\t\t\t\tTo enter the room, choose a nickname.\r\n\t\t\t\t</Typography>\r\n\r\n\t\t\t\t<form className='form' noValidate autoComplete='off'>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid='filled-basic'\r\n\t\t\t\t\t\tlabel='Enter Your Nickname'\r\n\t\t\t\t\t\tvalue={nickname}\r\n\t\t\t\t\t\tonChange={handleNickname}\r\n\t\t\t\t\t\tvariant='filled'\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className='spacer'></div>\r\n\t\t\t\t\t{isValid ? (\r\n\t\t\t\t\t\t<Link to='/game' style={{ textDecoration: \"none\" }}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\t\t\tonClick={handleJoinRoomBtn}\r\n\t\t\t\t\t\t\t\tclassName='btn'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tJoin Room\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\t\t\tonClick={handleJoinRoomBtn}\r\n\t\t\t\t\t\t\t\tclassName='btn'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tJoin Room\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Join;\r\n","export const colors = {\r\n\t// COLORS\r\n\tCARD_COLOR: \"#F3D8B4\",\r\n\tDARK_RED: \"#9F3B2C\",\r\n\tLIGHT_RED: \"#BF5B4C\",\r\n\tDARK_BLUE: \"#3284A3\",\r\n\tLIGHT_BLUE: \"#52A4C3\",\r\n\tBLACK_CARD: \"#535252\",\r\n\tBLACK_CARD_BORDER: \"#949494\",\r\n\tWHITE_CARD: \"#C7B08C\",\r\n\tWHITE_CARD_BORDER: \"#F7E0C4\",\r\n\tRED_CARD: \"#F26621\",\r\n\tRED_CARD_BORDER: \"#FFB87E\",\r\n\tBLUE_CARD: \"#FFB87E\",\r\n\tBLUE_CARD_BORDER: \"#ABE3EA\",\r\n\tCLUE_ROW_COLOR: \"#FFE6D5\",\r\n\tCLUE_RED_NAME: \"#C11F05\",\r\n\tCLUE_BLUE_NAME: \"#0179C5\",\r\n\tCLUE_WORD: \"#888888\",\r\n\tRED_TURN_BACKGROUND: \"#FFCCCB\",\r\n\tBLUE_TURN_BACKGROUND: \"#ADD8E6\"\r\n};\r\n","import React from \"react\";\r\nimport { colors } from \"../models/Colors\";\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\n\r\nfunction WordBox({ word, team, isRevealed, idx, classes, onClick }) {\r\n\tlet backgroundColor,\r\n\t\tborderColor,\r\n\t\ttextColor = \"#fff\";\r\n\r\n\tif (!isRevealed) {\r\n\t\tbackgroundColor = colors.CARD_COLOR;\r\n\t\tborderColor = colors.WHITE_CARD_BORDER;\r\n\t\ttextColor = \"#000\";\r\n\t} else if (team === \"red\") {\r\n\t\tbackgroundColor = colors.LIGHT_RED;\r\n\t\tborderColor = colors.RED_CARD_BORDER;\r\n\t} else if (team === \"blue\") {\r\n\t\tbackgroundColor = colors.LIGHT_BLUE;\r\n\t\tborderColor = colors.BLUE_CARD_BORDER;\r\n\t} else if (team === \"white\") {\r\n\t\tbackgroundColor = colors.WHITE_CARD;\r\n\t\tborderColor = colors.WHITE_CARD_BORDER;\r\n\t} else if (team === \"black\") {\r\n\t\tbackgroundColor = colors.BLACK_CARD;\r\n\t\tborderColor = colors.BLACK_CARD_BORDER;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Grid item onClick={onClick} idx={idx}>\r\n\t\t\t<Paper\r\n\t\t\t\tclassName={classes.paper}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tbackground: backgroundColor,\r\n\t\t\t\t\tborder: `5px solid ${borderColor}`,\r\n\t\t\t\t\tcolor: textColor\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{word}\r\n\t\t\t</Paper>\r\n\t\t</Grid>\r\n\t);\r\n}\r\n\r\nexport default WordBox;\r\n","import React from \"react\";\r\nimport \"../stylesheets/Clue.scss\";\r\nimport { colors } from \"../models/Colors\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { fontWeight } from \"@material-ui/system\";\r\n\r\nfunction Clue({ nickname, team, clue, guesses }) {\r\n\treturn (\r\n\t\t<div className='clue-row' style={{ background: colors.CLUE_ROW_COLOR }}>\r\n\t\t\t<Typography\r\n\t\t\t\tclassName='nickname'\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tcolor:\r\n\t\t\t\t\t\tteam === \"red\"\r\n\t\t\t\t\t\t\t? colors.CLUE_RED_NAME\r\n\t\t\t\t\t\t\t: colors.CLUE_BLUE_NAME,\r\n\t\t\t\t\tfontWeight: \"bold\"\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{nickname}\r\n\t\t\t</Typography>\r\n\t\t\t<Typography>&nbsp;gives clue&nbsp;</Typography>\r\n\t\t\t<Typography className='clue' style={{ color: colors.CLUE_WORD }}>\r\n\t\t\t\t{clue.toUpperCase()}{\" \"}\r\n\t\t\t\t{guesses === \"infinity\" ? <span>&infin;</span> : guesses}\r\n\t\t\t</Typography>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Clue;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"../stylesheets/GameRoom.scss\";\r\nimport {\r\n\tCard,\r\n\tCardContent,\r\n\tTypography,\r\n\tButton,\r\n\tBox,\r\n\tGrid,\r\n\tPaper,\r\n\tTextField,\r\n\tFormControl,\r\n\tInputLabel,\r\n\tSelect,\r\n\tMenuItem\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { colors } from \"../models/Colors\";\r\nimport WordBox from \"./WordBox\";\r\nimport Clue from \"./Clue\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\twindow: {\r\n\t\tpadding: \"20px\",\r\n\t\theight: \"100vh\",\r\n\t\twidth: \"100%\"\r\n\t},\r\n\tpaper: {\r\n\t\tpadding: \"15px 10px\",\r\n\t\ttextAlign: \"center\",\r\n\t\tborder: \"2px solid #D1BC9D\",\r\n\t\tminWidth: \"150px\",\r\n\t\tcursor: \"pointer\",\r\n\t\tcolor: \"#fff\"\r\n\t},\r\n\trow: {\r\n\t\twidth: \"100%\",\r\n\t\tdisplay: \"flex\",\r\n\t\tflex: \"1\",\r\n\t\tjustifyContent: \"space-evenly\",\r\n\t\talignItems: \"flex-start\"\r\n\t}\r\n}));\r\n\r\nfunction GameRoom({\r\n\tusers,\r\n\tGAME_STATE,\r\n\thasWon,\r\n\tcurrentRound,\r\n\tcurrentUser,\r\n\tclues,\r\n\tisSpymasterTyping,\r\n\twords,\r\n\tredTeamRemainingCards,\r\n\tblueTeamRemainingCards,\r\n\tupdateCurrentUserInDB,\r\n\tupdateGameStateInDB,\r\n\tupdateCurrentRoundInDB,\r\n\tupdateIsSpymasterTypingInDB,\r\n\taddClueToDB,\r\n\tupdateWordInDB,\r\n\tupdateRedTeamRemainingCards,\r\n\tupdateBlueTeamRemainingCards,\r\n\tupdateClueInDB,\r\n\tupdateHasWonInDB\r\n}) {\r\n\t// Class styles\r\n\tconst classes = useStyles();\r\n\r\n\t// Current Clue\r\n\tconst [currentClue, setCurrentClue] = useState({\r\n\t\tnickname: currentUser.nickname,\r\n\t\tteam: currentUser.team,\r\n\t\tclue: \"\",\r\n\t\tguesses: 1\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentUser.role === \"\" && GAME_STATE === 1) {\r\n\t\t\tupdateCurrentUserInDB({ ...currentUser, role: \"spectator\" });\r\n\t\t}\r\n\t}, updateCurrentUserInDB);\r\n\r\n\t// Buttons\r\n\tfunction handleJoinAsRedOperative() {\r\n\t\tif (currentUser.team === \"red\" && currentUser.role === \"operative\")\r\n\t\t\treturn;\r\n\r\n\t\tlet user = {\r\n\t\t\t...currentUser,\r\n\t\t\tteam: \"red\",\r\n\t\t\trole: \"operative\"\r\n\t\t};\r\n\r\n\t\tupdateCurrentUserInDB(user);\r\n\t}\r\n\r\n\tfunction handleJoinAsRedSpymaster() {\r\n\t\tif (currentUser.team === \"red\" && currentUser.role === \"spymaster\")\r\n\t\t\treturn;\r\n\r\n\t\tlet user = {\r\n\t\t\t...currentUser,\r\n\t\t\tteam: \"red\",\r\n\t\t\trole: \"spymaster\"\r\n\t\t};\r\n\r\n\t\tupdateCurrentUserInDB(user);\r\n\t}\r\n\r\n\tfunction handleJoinAsBlueOperative() {\r\n\t\tif (currentUser.team === \"blue\" && currentUser.role === \"operative\")\r\n\t\t\treturn;\r\n\r\n\t\tlet user = {\r\n\t\t\t...currentUser,\r\n\t\t\tteam: \"blue\",\r\n\t\t\trole: \"operative\"\r\n\t\t};\r\n\r\n\t\tupdateCurrentUserInDB(user);\r\n\t}\r\n\r\n\tfunction handleJoinAsBlueSpymaster() {\r\n\t\tif (currentUser.team === \"blue\" && currentUser.role === \"spymaster\")\r\n\t\t\treturn;\r\n\r\n\t\tlet user = {\r\n\t\t\t...currentUser,\r\n\t\t\tteam: \"blue\",\r\n\t\t\trole: \"spymaster\"\r\n\t\t};\r\n\r\n\t\tupdateCurrentUserInDB(user);\r\n\t}\r\n\r\n\t// Listeners\r\n\tfunction handleGuesses(e) {\r\n\t\tsetCurrentClue((prevState) => ({\r\n\t\t\t...prevState,\r\n\t\t\tguesses: e.target.value\r\n\t\t}));\r\n\t}\r\n\r\n\tfunction handleClueText(e) {\r\n\t\tsetCurrentClue((prevState) => ({\r\n\t\t\t...prevState,\r\n\t\t\tclue: e.target.value.trim()\r\n\t\t}));\r\n\t}\r\n\r\n\t// Give Clue Button\r\n\tfunction handleSubmitClue() {\r\n\t\taddClueToDB(currentClue);\r\n\t\tupdateIsSpymasterTypingInDB(false);\r\n\t}\r\n\r\n\t// Check for winning conditions\r\n\tfunction checkWin() {\r\n\t\treturn redTeamRemainingCards === 1 || blueTeamRemainingCards === 1;\r\n\t}\r\n\r\n\t// Switches turns in database\r\n\tfunction switchTurns() {\r\n\t\tif (currentRound === \"red\") {\r\n\t\t\tupdateCurrentRoundInDB(\"blue\");\r\n\t\t} else {\r\n\t\t\tupdateCurrentRoundInDB(\"red\");\r\n\t\t}\r\n\t}\r\n\r\n\t// End turn button\r\n\tfunction handleEndTurn() {\r\n\t\tswitchTurns();\r\n\t\tupdateIsSpymasterTypingInDB(true);\r\n\t}\r\n\r\n\t// Handles when a word is pressed\r\n\tfunction handleWordClick(e) {\r\n\t\tconst idx = e.target.parentElement.getAttribute(\"idx\");\r\n\r\n\t\tif (\r\n\t\t\tcurrentUser.role !== \"operative\" ||\r\n\t\t\tisSpymasterTyping ||\r\n\t\t\thasWon ||\r\n\t\t\tcurrentUser.team !== currentRound ||\r\n\t\t\twords[idx].isRevealed\r\n\t\t)\r\n\t\t\treturn;\r\n\r\n\t\tlet word = words[idx];\r\n\t\tlet clue = clues[clues.length - 1];\r\n\r\n\t\t// Reveal word and update in database\r\n\t\tupdateWordInDB({ ...word, isRevealed: true });\r\n\r\n\t\tif (word.team === \"black\") {\r\n\t\t\t// If black card\r\n\t\t\tswitchTurns();\r\n\t\t\tupdateHasWonInDB(true);\r\n\t\t\tupdateIsSpymasterTypingInDB(true);\r\n\t\t\tendGame();\r\n\t\t\treturn;\r\n\t\t} else if (word.team === \"white\") {\r\n\t\t\t// If white card\r\n\t\t\tswitchTurns();\r\n\t\t\tupdateIsSpymasterTypingInDB(true);\r\n\t\t\treturn;\r\n\t\t} else if (word.team === currentUser.team) {\r\n\t\t\t// If correct\r\n\t\t\t// Decrement guesses left\r\n\t\t\tif (clue.guesses !== \"infinity\") {\r\n\t\t\t\tupdateClueInDB({ ...clue, guesses: clue.guesses - 1 });\r\n\t\t\t}\r\n\r\n\t\t\tif (currentRound === \"blue\") {\r\n\t\t\t\tupdateBlueTeamRemainingCards(blueTeamRemainingCards - 1);\r\n\t\t\t} else {\r\n\t\t\t\tupdateRedTeamRemainingCards(redTeamRemainingCards - 1);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// If chooses opposite team\r\n\t\t\tif (currentRound === \"red\") {\r\n\t\t\t\tupdateBlueTeamRemainingCards(blueTeamRemainingCards - 1);\r\n\t\t\t} else {\r\n\t\t\t\tupdateRedTeamRemainingCards(redTeamRemainingCards - 1);\r\n\t\t\t}\r\n\t\t\tupdateIsSpymasterTypingInDB(true);\r\n\t\t\tswitchTurns();\r\n\t\t}\r\n\r\n\t\t// Check if remaining cards = 0\r\n\t\tif (checkWin()) {\r\n\t\t\tupdateHasWonInDB(true);\r\n\t\t\tendGame();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// No more guesses, switch turns\r\n\t\tif (clue.guesses === 1) {\r\n\t\t\tswitchTurns();\r\n\t\t\tupdateIsSpymasterTypingInDB(true);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction startGame() {\r\n\t\tlet redOperative = false;\r\n\t\tlet redSpymaster = false;\r\n\t\tlet blueOperative = false;\r\n\t\tlet blueSpymaster = false;\r\n\r\n\t\tfor (let user of users) {\r\n\t\t\tif (user.team === \"red\" && user.role === \"operative\") {\r\n\t\t\t\tredOperative = true;\r\n\t\t\t} else if (user.team === \"red\" && user.role === \"spymaster\") {\r\n\t\t\t\tredSpymaster = true;\r\n\t\t\t} else if (user.team === \"blue\" && user.role === \"operative\") {\r\n\t\t\t\tblueOperative = true;\r\n\t\t\t} else if (user.team === \"blue\" && user.role === \"spymaster\") {\r\n\t\t\t\tblueSpymaster = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\tusers.length >= 4 &&\r\n\t\t\tredOperative &&\r\n\t\t\tredSpymaster &&\r\n\t\t\tblueOperative &&\r\n\t\t\tblueSpymaster\r\n\t\t) {\r\n\t\t\tupdateGameStateInDB(1);\r\n\t\t} else {\r\n\t\t\talert(\"Please have at least 4 players and each role fulfilled\");\r\n\t\t}\r\n\t}\r\n\r\n\t// Ends game from a 5 second countdown\r\n\tfunction endGame() {\r\n\t\tsetTimeout(() => {\r\n\t\t\tupdateGameStateInDB(0);\r\n\t\t}, 5000);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={classes.window}\r\n\t\t\tstyle={{\r\n\t\t\t\tbackground:\r\n\t\t\t\t\tcurrentRound === \"red\"\r\n\t\t\t\t\t\t? colors.RED_TURN_BACKGROUND\r\n\t\t\t\t\t\t: colors.BLUE_TURN_BACKGROUND\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<div className={classes.row}>\r\n\t\t\t\t{/* Red Card */}\r\n\t\t\t\t<Card\r\n\t\t\t\t\tstyle={{ background: colors.DARK_RED }}\r\n\t\t\t\t\tclassName='team-card'\r\n\t\t\t\t>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t{GAME_STATE === 1 && (\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tvariant='h4'\r\n\t\t\t\t\t\t\t\talign='right'\r\n\t\t\t\t\t\t\t\tstyle={{ color: \"#fff\" }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{redTeamRemainingCards}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t<Box mt={2} mb={2}>\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tvariant='h6'\r\n\t\t\t\t\t\t\t\talign='left'\r\n\t\t\t\t\t\t\t\tstyle={{ color: \"#fff\" }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tOperative(s)\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t{/* List of Operatives (Red)*/}\r\n\t\t\t\t\t\t<Box mt={2} mb={2}>\r\n\t\t\t\t\t\t\t{users\r\n\t\t\t\t\t\t\t\t.filter(\r\n\t\t\t\t\t\t\t\t\t(u) =>\r\n\t\t\t\t\t\t\t\t\t\tu.team === \"red\" &&\r\n\t\t\t\t\t\t\t\t\t\tu.role === \"operative\"\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t.map((u) => (\r\n\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\talign='left'\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: \"fit-content\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tpadding: \"1px 10px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: \"15px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: colors.LIGHT_RED,\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#fff\"\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{u.nickname}\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t{GAME_STATE === 0 && (\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\t\t\tcolor='default'\r\n\t\t\t\t\t\t\t\tonClick={handleJoinAsRedOperative}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tdisplay:\r\n\t\t\t\t\t\t\t\t\t\tcurrentUser.team === \"red\" &&\r\n\t\t\t\t\t\t\t\t\t\tcurrentUser.role === \"operative\"\r\n\t\t\t\t\t\t\t\t\t\t\t? \"none\"\r\n\t\t\t\t\t\t\t\t\t\t\t: \"block\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tJoin as Operative\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t<Box mt={2} mb={2}>\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tvariant='h6'\r\n\t\t\t\t\t\t\t\talign='left'\r\n\t\t\t\t\t\t\t\tstyle={{ color: \"#fff\" }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tSpymaster(s)\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t{/* List of Spymasters (Red) */}\r\n\t\t\t\t\t\t<Box mt={2} mb={2}>\r\n\t\t\t\t\t\t\t{users\r\n\t\t\t\t\t\t\t\t.filter(\r\n\t\t\t\t\t\t\t\t\t(u) =>\r\n\t\t\t\t\t\t\t\t\t\tu.team === \"red\" &&\r\n\t\t\t\t\t\t\t\t\t\tu.role === \"spymaster\"\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t.map((u) => (\r\n\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\talign='left'\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: \"fit-content\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tpadding: \"1px 10px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: \"15px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: colors.LIGHT_RED,\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#fff\"\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{u.nickname}\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t{GAME_STATE === 0 && (\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\t\t\tcolor='default'\r\n\t\t\t\t\t\t\t\tonClick={handleJoinAsRedSpymaster}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tdisplay:\r\n\t\t\t\t\t\t\t\t\t\tcurrentUser.team === \"red\" &&\r\n\t\t\t\t\t\t\t\t\t\tcurrentUser.role === \"spymaster\"\r\n\t\t\t\t\t\t\t\t\t\t\t? \"none\"\r\n\t\t\t\t\t\t\t\t\t\t\t: \"block\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tJoin as Spymaster\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Card>\r\n\r\n\t\t\t\t{/* Game Board */}\r\n\t\t\t\t{GAME_STATE === 1 && (\r\n\t\t\t\t\t<Grid container spacing={1} xs={6} item justify='center'>\r\n\t\t\t\t\t\t{words.map(({ word, team, isRevealed }, idx) => (\r\n\t\t\t\t\t\t\t<WordBox\r\n\t\t\t\t\t\t\t\tword={word}\r\n\t\t\t\t\t\t\t\tteam={team}\r\n\t\t\t\t\t\t\t\tisRevealed={\r\n\t\t\t\t\t\t\t\t\tisRevealed ||\r\n\t\t\t\t\t\t\t\t\tcurrentUser.role === \"spymaster\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tidx={idx}\r\n\t\t\t\t\t\t\t\tclasses={classes}\r\n\t\t\t\t\t\t\t\tonClick={handleWordClick}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{/* Blue Card */}\r\n\t\t\t\t<Card\r\n\t\t\t\t\tstyle={{ background: colors.DARK_BLUE }}\r\n\t\t\t\t\tclassName='team-card'\r\n\t\t\t\t>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t{GAME_STATE === 1 && (\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tvariant='h4'\r\n\t\t\t\t\t\t\t\talign='right'\r\n\t\t\t\t\t\t\t\tstyle={{ color: \"#fff\" }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{blueTeamRemainingCards}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<Box mt={2} mb={2}>\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tvariant='h6'\r\n\t\t\t\t\t\t\t\talign='left'\r\n\t\t\t\t\t\t\t\tstyle={{ color: \"#fff\" }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tOperative(s)\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t{/* List of Operatives (Blue) */}\r\n\t\t\t\t\t\t<Box mt={2} mb={2}>\r\n\t\t\t\t\t\t\t{users\r\n\t\t\t\t\t\t\t\t.filter(\r\n\t\t\t\t\t\t\t\t\t(u) =>\r\n\t\t\t\t\t\t\t\t\t\tu.team === \"blue\" &&\r\n\t\t\t\t\t\t\t\t\t\tu.role === \"operative\"\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t.map((u) => (\r\n\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\talign='left'\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: \"fit-content\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tpadding: \"1px 10px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: \"15px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: colors.LIGHT_BLUE,\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#fff\"\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{u.nickname}\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t{GAME_STATE === 0 && (\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\t\t\tcolor='default'\r\n\t\t\t\t\t\t\t\tonClick={handleJoinAsBlueOperative}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tdisplay:\r\n\t\t\t\t\t\t\t\t\t\tcurrentUser.team === \"blue\" &&\r\n\t\t\t\t\t\t\t\t\t\tcurrentUser.role === \"operative\"\r\n\t\t\t\t\t\t\t\t\t\t\t? \"none\"\r\n\t\t\t\t\t\t\t\t\t\t\t: \"block\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tJoin as Operative\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<Box mt={2} mb={2}>\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tvariant='h6'\r\n\t\t\t\t\t\t\t\talign='left'\r\n\t\t\t\t\t\t\t\tstyle={{ color: \"#fff\" }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tSpymaster(s)\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t{/* List of Spymasters (Blue) */}\r\n\t\t\t\t\t\t<Box mt={2} mb={2}>\r\n\t\t\t\t\t\t\t{users\r\n\t\t\t\t\t\t\t\t.filter(\r\n\t\t\t\t\t\t\t\t\t(u) =>\r\n\t\t\t\t\t\t\t\t\t\tu.team === \"blue\" &&\r\n\t\t\t\t\t\t\t\t\t\tu.role === \"spymaster\"\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t.map((u) => (\r\n\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\talign='left'\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: \"fit-content\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tpadding: \"1px 10px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: \"15px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: colors.LIGHT_BLUE,\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#fff\"\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{u.nickname}\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t{GAME_STATE === 0 && (\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\t\t\tcolor='default'\r\n\t\t\t\t\t\t\t\tonClick={handleJoinAsBlueSpymaster}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tdisplay:\r\n\t\t\t\t\t\t\t\t\t\tcurrentUser.team === \"blue\" &&\r\n\t\t\t\t\t\t\t\t\t\tcurrentUser.role === \"spymaster\"\r\n\t\t\t\t\t\t\t\t\t\t\t? \"none\"\r\n\t\t\t\t\t\t\t\t\t\t\t: \"block\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tJoin as Spymaster\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* Guess Row */}\r\n\t\t\t{GAME_STATE === 1 &&\r\n\t\t\t\tcurrentUser.team === currentRound &&\r\n\t\t\t\tcurrentUser.role === \"spymaster\" &&\r\n\t\t\t\tisSpymasterTyping &&\r\n\t\t\t\t!hasWon && (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={classes.row}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tpadding: \"30px\"\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<form noValidate autoComplete='off'>\r\n\t\t\t\t\t\t\t{/* Typing Clue */}\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tid='outlined-basic'\r\n\t\t\t\t\t\t\t\tlabel='Type Your Clue Here'\r\n\t\t\t\t\t\t\t\tvariant='outlined'\r\n\t\t\t\t\t\t\t\tonChange={handleClueText}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t&emsp;\r\n\t\t\t\t\t\t\t{/* Number of Guesses */}\r\n\t\t\t\t\t\t\t<FormControl variant='outlined'>\r\n\t\t\t\t\t\t\t\t<InputLabel id='demo-simple-select-outlined-label'>\r\n\t\t\t\t\t\t\t\t\tGuesses\r\n\t\t\t\t\t\t\t\t</InputLabel>\r\n\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: \"100px\" }}\r\n\t\t\t\t\t\t\t\t\tvalue={currentClue.guesses}\r\n\t\t\t\t\t\t\t\t\tonChange={handleGuesses}\r\n\t\t\t\t\t\t\t\t\tlabel='Guesses'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<MenuItem value={1}>1</MenuItem>\r\n\t\t\t\t\t\t\t\t\t<MenuItem value={2}>2</MenuItem>\r\n\t\t\t\t\t\t\t\t\t<MenuItem value={3}>3</MenuItem>\r\n\t\t\t\t\t\t\t\t\t<MenuItem value={4}>4</MenuItem>\r\n\t\t\t\t\t\t\t\t\t<MenuItem value={5}>5</MenuItem>\r\n\t\t\t\t\t\t\t\t\t<MenuItem value={6}>6</MenuItem>\r\n\t\t\t\t\t\t\t\t\t<MenuItem value={7}>7</MenuItem>\r\n\t\t\t\t\t\t\t\t\t<MenuItem value={8}>8</MenuItem>\r\n\t\t\t\t\t\t\t\t\t<MenuItem value={9}>9</MenuItem>\r\n\t\t\t\t\t\t\t\t\t<MenuItem value={\"infinity\"}>\r\n\t\t\t\t\t\t\t\t\t\t&infin;\r\n\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t&emsp;\r\n\t\t\t\t\t\t\t{/* Submit Clue Button */}\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\t\t\talign='center'\r\n\t\t\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\t\t\tonClick={handleSubmitClue}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tGive Clue\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\r\n\t\t\t{/* Start Button */}\r\n\t\t\t{GAME_STATE === 0 && (\r\n\t\t\t\t<div className={classes.row} style={{ padding: \"30px\" }}>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\tcolor='default'\r\n\t\t\t\t\t\talign='center'\r\n\t\t\t\t\t\tonClick={startGame}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tStart Game\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t{/* currentRound Text */}\r\n\t\t\t{GAME_STATE === 1 && (\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={classes.row}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tpadding: \"30px\",\r\n\t\t\t\t\t\tjustifyContent: \"center\",\r\n\t\t\t\t\t\talignItems: \"center\"\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Typography\r\n\t\t\t\t\t\tvariant='h6'\r\n\t\t\t\t\t\talign='center'\r\n\t\t\t\t\t\tclassName='clue'\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tbackground: \"#FFF\",\r\n\t\t\t\t\t\t\tborder: `5px solid ${colors.BLACK_CARD_BORDER}`\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{isSpymasterTyping\r\n\t\t\t\t\t\t\t? \"Waiting for clue...\"\r\n\t\t\t\t\t\t\t: clues[clues.length - 1]?.clue.toUpperCase()}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t{!isSpymasterTyping && (\r\n\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\tvariant='h6'\r\n\t\t\t\t\t\t\talign='center'\r\n\t\t\t\t\t\t\tclassName='clue'\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tbackground: \"#FFF\",\r\n\t\t\t\t\t\t\t\tborder: `5px solid ${colors.BLACK_CARD_BORDER}`\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{clues[clues.length - 1]?.guesses === \"infinity\" ? (\r\n\t\t\t\t\t\t\t\t<span>&infin;</span>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\tclues[clues.length - 1]?.guesses\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{!isSpymasterTyping &&\r\n\t\t\t\t\t\tcurrentUser.role === \"operative\" &&\r\n\t\t\t\t\t\tcurrentUser.team === currentRound && (\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\t\t\talign='center'\r\n\t\t\t\t\t\t\t\tonClick={handleEndTurn}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tEnd Turn\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t{/* Clues Chat Box */}\r\n\t\t\t{GAME_STATE === 1 && (\r\n\t\t\t\t<div className='chat-box'>\r\n\t\t\t\t\t<Typography variant='body1' align='center'>\r\n\t\t\t\t\t\tGame Log\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<div className='chat-box-dialog'>\r\n\t\t\t\t\t\t{clues.map((clue) => (\r\n\t\t\t\t\t\t\t<Clue\r\n\t\t\t\t\t\t\t\tnickname={clue.nickname}\r\n\t\t\t\t\t\t\t\tteam={clue.team}\r\n\t\t\t\t\t\t\t\tclue={clue.clue}\r\n\t\t\t\t\t\t\t\tguesses={clue.guesses}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t{/* Winner Message */}\r\n\t\t\t{GAME_STATE === 1 && hasWon && (\r\n\t\t\t\t<div className={classes.row}>\r\n\t\t\t\t\t<Typography variant='h5'>\r\n\t\t\t\t\t\t{currentRound.toUpperCase()} TEAM HAS WON\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default GameRoom;\r\n","import \"./App.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./components/Home\";\r\nimport Join from \"./components/Join\";\r\nimport GameRoom from \"./components/GameRoom\";\r\n\r\nfunction App() {\r\n\t// New user ID\r\n\tconst id = uuidv4();\r\n\r\n\t// Enable/Disable connection to database\r\n\tvar isOnline = true;\r\n\r\n\t// Firebase database\r\n\tvar db = firebase.database();\r\n\r\n\t// GAME_STATE (0 not started, 1 started)\r\n\tconst [GAME_STATE, setGameState] = useState(0);\r\n\r\n\t// True if game has been won\r\n\tconst [hasWon, setHasWon] = useState(false);\r\n\r\n\t// Words\r\n\tconst [words, setWords] = useState([]);\r\n\r\n\t// Current Round (Red, Blue)\r\n\tconst [currentRound, setCurrentRound] = useState(\"red\");\r\n\r\n\t// Spymaster Typing?\r\n\tconst [isSpymasterTyping, setIsSpymasterTyping] = useState(true);\r\n\r\n\t// Team Remaining Cards\r\n\tconst [redTeamRemainingCards, setRedTeamRemainingCards] = useState(9);\r\n\tconst [blueTeamRemainingCards, setBlueTeamRemainingCards] = useState(8);\r\n\r\n\t// CurrentUser\r\n\tconst [currentUser, setCurrentUser] = useState({\r\n\t\tid,\r\n\t\tnickname: \"\",\r\n\t\trole: \"\",\r\n\t\tteam: \"\"\r\n\t});\r\n\r\n\t// List of users online\r\n\tconst [users, setUsers] = useState([]);\r\n\r\n\t// CLUES\r\n\tconst [clues, setClues] = useState([]);\r\n\r\n\t// Guesses for operatives\r\n\tconst [guessesRemaining, setGuessesRemaining] = useState(1);\r\n\r\n\t// Testing conditions\r\n\tif (isOnline) db.goOnline();\r\n\telse db.goOffline();\r\n\r\n\t// When user connects, populate users according to database\r\n\tasync function loadUsers() {\r\n\t\tlet users = await db.ref(\"users\").get();\r\n\t\tconsole.log(\"---------------------------------\");\r\n\t\tconsole.log(\"Loaded Users\");\r\n\t\tconsole.log(\"---------------------------------\");\r\n\t\tconsole.log(Object.values(users.val()));\r\n\t\tsetUsers(Object.values(users.val()));\r\n\t}\r\n\r\n\tfunction loadWords() {\r\n\t\t// Import word.json and shuffle the order\r\n\t\tconst data = require(\"./data/words.json\")[\"words\"];\r\n\t\tlet randIdx = Math.floor(Math.random() * data.length);\r\n\t\tconst shuffle = require(\"shuffle-array\");\r\n\t\tconst words = shuffle(data[randIdx]);\r\n\t\tfor (let i = 0; i < words.length; i++) {\r\n\t\t\twords[i][\"id\"] = i;\r\n\t\t\tdb.ref(`words/word-${words[i][\"id\"]}`).set(words[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t// On mount\r\n\tuseEffect(() => {\r\n\t\tloadUsers();\r\n\t}, [setUsers]);\r\n\r\n\t// On listeners\r\n\tuseEffect(() => {\r\n\t\tdb.ref(\"users\").on(\"child_added\", (snapshot) => {\r\n\t\t\t// Load words if length of users was previously 0\r\n\t\t\tsetUsers((prevState) => [...prevState, snapshot.val()]);\r\n\t\t\t// console.log(\"---------------------------------\");\r\n\t\t\t// console.log(\"User Added\");\r\n\t\t\t// console.log(\"---------------------------------\");\r\n\t\t\t// console.log(snapshot.val());\r\n\t\t});\r\n\r\n\t\tdb.ref(\"users\").on(\"child_removed\", (snapshot) => {\r\n\t\t\tsetUsers((prevState) => {\r\n\t\t\t\tif (prevState.length - 1 < 4) {\r\n\t\t\t\t\tdb.ref(\"GAME_STATE\").set(0);\r\n\t\t\t\t}\r\n\t\t\t\treturn prevState.filter(\r\n\t\t\t\t\t(user) => user.id !== snapshot.val().id\r\n\t\t\t\t);\r\n\t\t\t});\r\n\r\n\t\t\t// console.log(\"---------------------------------\");\r\n\t\t\t// console.log(\"User Removed\");\r\n\t\t\t// console.log(\"---------------------------------\");\r\n\t\t\t// console.log(snapshot.val());\r\n\t\t});\r\n\r\n\t\tdb.ref(\"users\").on(\"child_changed\", (snapshot) => {\r\n\t\t\t// console.log(\"---------------------------------\");\r\n\t\t\t// console.log(\"User Changed\");\r\n\t\t\t// console.log(\"---------------------------------\");\r\n\t\t\t// console.log(snapshot.val());\r\n\t\t\tsetUsers((prevState) =>\r\n\t\t\t\tprevState.map((user) =>\r\n\t\t\t\t\tuser.id === snapshot.val().id ? snapshot.val() : user\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\tdb.ref(\"GAME_STATE\").on(\"value\", (snapshot) => {\r\n\t\t\tlet GAME_STATE = parseInt(snapshot.val());\r\n\t\t\t// NEED FOR WORDS TO SORT PROPERLY\r\n\t\t\tif (GAME_STATE === 0) {\r\n\t\t\t\tloadWords();\r\n\t\t\t\tupdateHasWonInDB(false);\r\n\t\t\t\tupdateIsSpymasterTypingInDB(true);\r\n\t\t\t\tupdateRedTeamRemainingCards(9);\r\n\t\t\t\tupdateBlueTeamRemainingCards(8);\r\n\t\t\t\tupdateClueInDB([]);\r\n\t\t\t}\r\n\r\n\t\t\tsetGameState(GAME_STATE);\r\n\t\t\t// console.log(\"---------------------------------\");\r\n\t\t\t// console.log(\"GAME_STATE\");\r\n\t\t\t// console.log(\"---------------------------------\");\r\n\t\t\t// console.log(snapshot.val());\r\n\t\t});\r\n\r\n\t\tdb.ref(\"hasWon\").on(\"value\", (snapshot) => {\r\n\t\t\tsetHasWon(snapshot.val());\r\n\t\t});\r\n\r\n\t\tdb.ref(\"isSpymasterTyping\").on(\"value\", (snapshot) => {\r\n\t\t\tsetIsSpymasterTyping(snapshot.val());\r\n\t\t\t// console.log(\"---------------------------------\");\r\n\t\t\t// console.log(\"isSpymasterTyping\");\r\n\t\t\t// console.log(\"---------------------------------\");\r\n\t\t\t// console.log(snapshot.val());\r\n\t\t});\r\n\r\n\t\tdb.ref(\"currentRound\").on(\"value\", (snapshot) => {\r\n\t\t\tsetCurrentRound(snapshot.val());\r\n\t\t\t// console.log(\"---------------------------------\");\r\n\t\t\t// console.log(\"currentRound\");\r\n\t\t\t// console.log(\"---------------------------------\");\r\n\t\t\t// console.log(snapshot.val());\r\n\t\t});\r\n\r\n\t\tdb.ref(\"RED_TEAM_REMAINING_CARDS\").on(\"value\", (snapshot) => {\r\n\t\t\tsetRedTeamRemainingCards(snapshot.val());\r\n\t\t\t// console.log(\"---------------------------------\");\r\n\t\t\t// console.log(\"redTeamRemainingCards\");\r\n\t\t\t// console.log(\"---------------------------------\");\r\n\t\t\t// console.log(snapshot.val());\r\n\t\t});\r\n\r\n\t\tdb.ref(\"BLUE_TEAM_REMAINING_CARDS\").on(\"value\", (snapshot) => {\r\n\t\t\tsetBlueTeamRemainingCards(snapshot.val());\r\n\t\t\t// console.log(\"---------------------------------\");\r\n\t\t\t// console.log(\"blueTeamRemainingCards\");\r\n\t\t\t// console.log(\"---------------------------------\");\r\n\t\t\t// console.log(snapshot.val());\r\n\t\t});\r\n\r\n\t\tdb.ref(\"clues\").on(\"child_added\", (snapshot) => {\r\n\t\t\tlet clues = snapshot.val() || [];\r\n\t\t\tif (clues === []) {\r\n\t\t\t\tsetClues([]);\r\n\t\t\t} else {\r\n\t\t\t\tsetClues((prevState) => [...prevState, snapshot.val()]);\r\n\t\t\t}\r\n\r\n\t\t\t// console.log(\"---------------------------------\");\r\n\t\t\t// console.log(\"clues\");\r\n\t\t\t// console.log(\"---------------------------------\");\r\n\t\t\t// console.log(snapshot.val());\r\n\t\t});\r\n\r\n\t\tdb.ref(\"clues\").on(\"child_changed\", (snapshot) => {\r\n\t\t\tsetClues((prevState) =>\r\n\t\t\t\tprevState.map((clue) =>\r\n\t\t\t\t\tclue.id === snapshot.val().id ? snapshot.val() : clue\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\tdb.ref(\"words\").on(\"child_added\", (snapshot) => {\r\n\t\t\tsetWords((prevState) => [...prevState, snapshot.val()]);\r\n\t\t});\r\n\r\n\t\tdb.ref(\"words\").on(\"child_removed\", (snapshot) => {\r\n\t\t\tsetWords((prevState) =>\r\n\t\t\t\tprevState.filter(\r\n\t\t\t\t\t(w) => parseInt(w.id) !== parseInt(snapshot.val().id)\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\tdb.ref(\"words\").on(\"child_changed\", (snapshot) => {\r\n\t\t\t// Add id property to Word object\r\n\t\t\t// Modify object in words state at that id\r\n\t\t\tsetWords((prevState) =>\r\n\t\t\t\tprevState.map((word) =>\r\n\t\t\t\t\tword.id === snapshot.val().id ? snapshot.val() : word\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t\t// console.log(\"---------------------------------\");\r\n\t\t\t// console.log(\"words\");\r\n\t\t\t// console.log(\"---------------------------------\");\r\n\t\t\t// console.log(snapshot.val());\r\n\t\t});\r\n\r\n\t\tdb.ref(`users/user-${currentUser.id}`).on(\"value\", (snapshot) => {\r\n\t\t\tsetCurrentUser(snapshot.val());\r\n\r\n\t\t\t// console.log(\"---------------------------------\");\r\n\t\t\t// console.log(\"CurrentUser\");\r\n\t\t\t// console.log(\"---------------------------------\");\r\n\t\t\t// console.log(snapshot.val());\r\n\t\t});\r\n\r\n\t\t// Add user to database\r\n\t\tdb.ref(`users/user-${currentUser.id}`).set(currentUser);\r\n\r\n\t\t// Remove user from database\r\n\t\tdb.ref(`users/user-${currentUser.id}`).onDisconnect().remove();\r\n\r\n\t\t// Stop listeners\r\n\t\treturn () => {\r\n\t\t\tdb.ref(\"users\").off();\r\n\t\t\tdb.ref(\"GAME_STATE\").off();\r\n\t\t\tdb.ref(\"hasWon\").off();\r\n\t\t\tdb.ref(\"isSpymasterTyping\").off();\r\n\t\t\tdb.ref(\"RED_TEAM_REMAINING_CARDS\").off();\r\n\t\t\tdb.ref(\"BLUE_TEAM_REMAINING_CARDS\").off();\r\n\t\t\tdb.ref(\"currentRound\").off();\r\n\t\t\tdb.ref(\"clues\").off();\r\n\t\t\tdb.ref(\"words\").off();\r\n\t\t\tdb.ref(`users/user-${currentUser.id}`).off();\r\n\t\t};\r\n\t}, [\r\n\t\tsetUsers,\r\n\t\tsetGameState,\r\n\t\tsetIsSpymasterTyping,\r\n\t\tsetCurrentRound,\r\n\t\tsetClues,\r\n\t\tsetWords,\r\n\t\tsetCurrentUser,\r\n\t\tsetHasWon\r\n\t]);\r\n\r\n\t// Updates GAME_STATE in database\r\n\t// value: int\r\n\tfunction updateGameStateInDB(value) {\r\n\t\tdb.ref(\"GAME_STATE\").set(value);\r\n\t}\r\n\r\n\t// Updates hasWon in database\r\n\t// value: true or false\r\n\tfunction updateHasWonInDB(value) {\r\n\t\tdb.ref(\"hasWon\").set(value);\r\n\t}\r\n\r\n\t// Updates isSpymasterTyping in database\r\n\t// isTyping: boolean\r\n\tfunction updateIsSpymasterTypingInDB(isTyping) {\r\n\t\tdb.ref(\"isSpymasterTyping\").set(isTyping);\r\n\t}\r\n\r\n\t// Updates CURRENT_ROUND in database\r\n\t// round: \"red\" || \"blue\"\r\n\tfunction updateCurrentRoundInDB(round) {\r\n\t\tdb.ref(\"currentRound\").set(round);\r\n\t}\r\n\r\n\t// Updates currentUser in database\r\n\t// user: object\r\n\tfunction updateCurrentUserInDB(user) {\r\n\t\tdb.ref(`users/user-${currentUser.id}`).set(user);\r\n\t}\r\n\r\n\t// Pushes new clue to database\r\n\t// clue: object\r\n\tfunction addClueToDB(clue) {\r\n\t\tclue[\"id\"] = uuidv4();\r\n\t\tdb.ref(`clues/clue-${clue[\"id\"]}`).set(clue);\r\n\t}\r\n\r\n\t// Updates clue in database\r\n\t// To decrement guesses\r\n\t// clue: object\r\n\tfunction updateClueInDB(clue) {\r\n\t\tif (clue === []) db.ref(\"clues\").remove();\r\n\t\telse db.ref(`clues/clue-${clue.id}`).set(clue);\r\n\t}\r\n\r\n\t// Update word at id\r\n\t// word: object\r\n\tfunction updateWordInDB(word) {\r\n\t\tdb.ref(`words/word-${word.id}`).set(word);\r\n\t}\r\n\r\n\t// Update RED_TEAM_REMAINING_CARDS in database\r\n\t// value: new score\r\n\tfunction updateRedTeamRemainingCards(value) {\r\n\t\tdb.ref(`RED_TEAM_REMAINING_CARDS`).set(value);\r\n\t}\r\n\r\n\t// Update BLUE_TEAM_REMAINING_CARDS in database\r\n\t// value: new score\r\n\tfunction updateBlueTeamRemainingCards(value) {\r\n\t\tdb.ref(`BLUE_TEAM_REMAINING_CARDS`).set(value);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t{/* For each path */}\r\n\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path='/game'>\r\n\t\t\t\t\t<GameRoom\r\n\t\t\t\t\t\tusers={users}\r\n\t\t\t\t\t\tGAME_STATE={GAME_STATE}\r\n\t\t\t\t\t\thasWon={hasWon}\r\n\t\t\t\t\t\tcurrentRound={currentRound}\r\n\t\t\t\t\t\tcurrentUser={currentUser}\r\n\t\t\t\t\t\tclues={clues}\r\n\t\t\t\t\t\tisSpymasterTyping={isSpymasterTyping}\r\n\t\t\t\t\t\twords={words}\r\n\t\t\t\t\t\tredTeamRemainingCards={redTeamRemainingCards}\r\n\t\t\t\t\t\tblueTeamRemainingCards={blueTeamRemainingCards}\r\n\t\t\t\t\t\tupdateCurrentUserInDB={updateCurrentUserInDB}\r\n\t\t\t\t\t\tupdateGameStateInDB={updateGameStateInDB}\r\n\t\t\t\t\t\tupdateCurrentRoundInDB={updateCurrentRoundInDB}\r\n\t\t\t\t\t\tupdateIsSpymasterTypingInDB={\r\n\t\t\t\t\t\t\tupdateIsSpymasterTypingInDB\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\taddClueToDB={addClueToDB}\r\n\t\t\t\t\t\tupdateWordInDB={updateWordInDB}\r\n\t\t\t\t\t\tupdateRedTeamRemainingCards={\r\n\t\t\t\t\t\t\tupdateRedTeamRemainingCards\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tupdateBlueTeamRemainingCards={\r\n\t\t\t\t\t\t\tupdateBlueTeamRemainingCards\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tupdateClueInDB={updateClueInDB}\r\n\t\t\t\t\t\tupdateHasWonInDB={updateHasWonInDB}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path='/join'>\r\n\t\t\t\t\t<Join\r\n\t\t\t\t\t\tcurrentUser={currentUser}\r\n\t\t\t\t\t\tupdateCurrentUserInDB={updateCurrentUserInDB}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Route>\r\n\t\t\t\t{/* Keep root path on bottom */}\r\n\t\t\t\t<Route path='/'>\r\n\t\t\t\t\t<Home />\r\n\t\t\t\t</Route>\r\n\t\t\t\t{/*  */}\r\n\t\t\t</Switch>\r\n\t\t</Router>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport firebase from \"firebase/app\";\r\n\r\nfirebase.initializeApp({\r\n\tapiKey: process.env.REACT_APP_API_KEY,\r\n\tauthDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n\tdatabaseURL: process.env.REACT_APP_DATABASE_URL,\r\n\tprojectId: process.env.REACT_APP_PROJECT_ID,\r\n\tstorageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n\tmessagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n\tappId: process.env.REACT_APP_APP_ID\r\n});\r\n\r\nReactDOM.render(\r\n\t<React.Fragment>\r\n\t\t<App />\r\n\t</React.Fragment>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}