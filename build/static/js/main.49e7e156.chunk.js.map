{"version":3,"sources":["components/Home.js","components/Join.js","models/Colors.js","components/WordBox.js","components/Clue.js","components/GameRoom.js","App.js","reportWebVitals.js","index.js"],"names":["Home","db","className","Typography","align","variant","to","style","textDecoration","Button","color","Accordion","AccordionSummary","expandIcon","ExpandMore","aria-controls","id","AccordionDetails","Join","currentUser","updateCurrentUserInDB","useState","isValid","setIsValid","nickname","setNickname","handleJoinRoomBtn","alert","fontSize","TextField","label","value","onChange","e","target","trim","length","onClick","colors","WordBox","backgroundColor","borderColor","word","team","isRevealed","isChosen","idx","textColor","Paper","background","border","Clue","clue","guesses","fontWeight","toUpperCase","useStyles","makeStyles","theme","window","padding","minHeight","width","row","display","flex","justifyContent","alignItems","GameRoom","users","GAME_STATE","hasWon","currentRound","clues","isSpymasterTyping","words","redTeamRemainingCards","blueTeamRemainingCards","updateGameStateInDB","updateCurrentRoundInDB","updateIsSpymasterTypingInDB","addClueToDB","updateWordInDB","updateRedTeamRemainingCards","updateBlueTeamRemainingCards","updateClueInDB","updateHasWonInDB","loadWords","removeCluesInDB","testing","classes","winner","setWinner","currentClue","setCurrentClue","switchTurns","handleWordClick","getAttribute","role","endGame","prevState","setTimeout","useEffect","document","body","Card","CardContent","Box","mt","mb","filter","u","map","Fragment","borderRadius","user","noValidate","autoComplete","FormControl","InputLabel","Select","MenuItem","chat","querySelector","scrollTop","clientHeight","redOperative","redSpymaster","blueOperative","blueSpymaster","App","uuidv4","firebase","database","setGameState","setHasWon","setWords","setCurrentRound","setIsSpymasterTyping","setRedTeamRemainingCards","setBlueTeamRemainingCards","setCurrentUser","setUsers","setClues","a","ref","get","console","log","Object","values","val","data","require","randIdx","Math","floor","random","shuffle","i","set","goOnline","loadUsers","on","snapshot","parseInt","w","onDisconnect","remove","off","path","round","isTyping","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.49e7e156.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../stylesheets/Home.scss\";\nimport { Link } from \"react-router-dom\";\nimport {\n\tButton,\n\tAccordion,\n\tAccordionSummary,\n\tTypography,\n\tAccordionDetails\n} from \"@material-ui/core\";\nimport { ExpandMore } from \"@material-ui/icons\";\n\nfunction Home({ db }) {\n\treturn (\n\t\t<div className='main'>\n\t\t\t{/* Title and Author */}\n\t\t\t<div className='col center'>\n\t\t\t\t<Typography align='center' variant='h3'>\n\t\t\t\t\tCodenames\n\t\t\t\t</Typography>\n\t\t\t\t<Typography align='center' variant='h6'>\n\t\t\t\t\tby Jason Cheung\n\t\t\t\t</Typography>\n\t\t\t</div>\n\n\t\t\t{/* Create Game Button */}\n\t\t\t<div className='row center'>\n\t\t\t\t<Link to='/join' style={{ textDecoration: \"none\" }}>\n\t\t\t\t\t<Button variant='contained' color='primary' className='btn'>\n\t\t\t\t\t\tJoin Room\n\t\t\t\t\t</Button>\n\t\t\t\t</Link>\n\t\t\t</div>\n\n\t\t\t{/* Instructions */}\n\t\t\t<div className='row center'>\n\t\t\t\t<Accordion className='accordion'>\n\t\t\t\t\t<AccordionSummary\n\t\t\t\t\t\texpandIcon={<ExpandMore />}\n\t\t\t\t\t\taria-controls='panel1a-content'\n\t\t\t\t\t\tid='panel1a-header'\n\t\t\t\t\t>\n\t\t\t\t\t\t<Typography>Instructions</Typography>\n\t\t\t\t\t</AccordionSummary>\n\t\t\t\t\t<AccordionDetails>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t1. Click on the JOIN ROOM button.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography>2. Enter your nickname.</Typography>\n\t\t\t\t\t\t<Typography>3. Join Game.</Typography>\n\t\t\t\t\t\t<Typography>4. Invite Friends.</Typography>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t5. Operatives wait for Spymasters to give a clue and\n\t\t\t\t\t\t\tnumber of guesses to guess their team's words.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t6. Clicking on a Black card is an immediate loss for\n\t\t\t\t\t\t\tthat team.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t7. Clicking on a White card wins no points and\n\t\t\t\t\t\t\tswitches turns.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t9. Team wins game when their remaining cards to\n\t\t\t\t\t\t\treveal is 0.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</AccordionDetails>\n\t\t\t\t</Accordion>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport \"../stylesheets/Join.scss\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { TextField, Button, Typography } from \"@material-ui/core\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport firebase from \"firebase/app\";\n\nfunction Join({ currentUser, updateCurrentUserInDB }) {\n\tconst [isValid, setIsValid] = useState(false);\n\tconst [nickname, setNickname] = useState(\"\");\n\n\tfunction handleNickname(e) {\n\t\tlet value = e.target.value;\n\t\tsetIsValid(value.trim().length > 0);\n\t\tsetNickname(value);\n\t}\n\n\tfunction handleJoinRoomBtn() {\n\t\t// Check if nickname is empty\n\t\tif (!isValid) {\n\t\t\talert(\"Please enter a valid nickname\");\n\t\t} else {\n\t\t\tupdateCurrentUserInDB({\n\t\t\t\t...currentUser,\n\t\t\t\tnickname\n\t\t\t});\n\t\t}\n\t}\n\n\t// function\n\n\treturn (\n\t\t<div className='window'>\n\t\t\t<div className='group-box'>\n\t\t\t\t<Typography variant='h5' align='center'>\n\t\t\t\t\tWelcome to Codenames\n\t\t\t\t</Typography>\n\t\t\t\t<Typography style={{ fontSize: \"15px\" }} align='center'>\n\t\t\t\t\tTo enter the room, choose a nickname.\n\t\t\t\t</Typography>\n\n\t\t\t\t<div className='form'>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tid='filled-basic'\n\t\t\t\t\t\tlabel='Enter Your Nickname'\n\t\t\t\t\t\tvalue={nickname}\n\t\t\t\t\t\tonChange={handleNickname}\n\t\t\t\t\t\tvariant='filled'\n\t\t\t\t\t/>\n\t\t\t\t\t<div className='spacer'></div>\n\t\t\t\t\t{isValid ? (\n\t\t\t\t\t\t<Link to='/game' style={{ textDecoration: \"none\" }}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\tonClick={handleJoinRoomBtn}\n\t\t\t\t\t\t\t\tclassName='btn'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tJoin Room\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\tonClick={handleJoinRoomBtn}\n\t\t\t\t\t\t\t\tclassName='btn'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tJoin Room\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Join;\n","export const colors = {\n\t// COLORS\n\tCARD_COLOR: \"#F3D8B4\",\n\tDARK_RED: \"#9F3B2C\",\n\tLIGHT_RED: \"#BF5B4C\",\n\tDARK_BLUE: \"#3284A3\",\n\tLIGHT_BLUE: \"#52A4C3\",\n\tBLACK_CARD: \"#535252\",\n\tBLACK_CARD_BORDER: \"#949494\",\n\tWHITE_CARD: \"#C7B08C\",\n\tWHITE_CARD_BORDER: \"#F7E0C4\",\n\tRED_CARD: \"#F26621\",\n\tRED_CARD_BORDER: \"#FFB87E\",\n\tBLUE_CARD: \"#FFB87E\",\n\tBLUE_CARD_BORDER: \"#ABE3EA\",\n\tCLUE_ROW_COLOR: \"#FFE6D5\",\n\tCLUE_RED_NAME: \"#C11F05\",\n\tCLUE_BLUE_NAME: \"#0179C5\",\n\tCLUE_WORD: \"#888888\",\n\tRED_TURN_BACKGROUND: \"#FFCCCB\",\n\tBLUE_TURN_BACKGROUND: \"#ADD8E6\"\n};\n","import React from \"react\";\nimport { colors } from \"../models/Colors\";\nimport { Grid, Paper } from \"@material-ui/core\";\n\nfunction WordBox({ word, team, isRevealed, isChosen, idx, onClick }) {\n\tlet backgroundColor,\n\t\tborderColor,\n\t\ttextColor = \"#fff\";\n\n\tif (!isRevealed) {\n\t\tbackgroundColor = colors.CARD_COLOR;\n\t\tborderColor = colors.WHITE_CARD_BORDER;\n\t\ttextColor = \"#000\";\n\t} else if (team === \"red\") {\n\t\tbackgroundColor = colors.LIGHT_RED;\n\t\tborderColor = colors.RED_CARD_BORDER;\n\t} else if (team === \"blue\") {\n\t\tbackgroundColor = colors.LIGHT_BLUE;\n\t\tborderColor = colors.BLUE_CARD_BORDER;\n\t} else if (team === \"white\") {\n\t\tbackgroundColor = colors.WHITE_CARD;\n\t\tborderColor = colors.WHITE_CARD_BORDER;\n\t} else if (team === \"black\") {\n\t\tbackgroundColor = colors.BLACK_CARD;\n\t\tborderColor = colors.BLACK_CARD_BORDER;\n\t}\n\n\treturn (\n\t\t<Paper\n\t\t\tonClick={onClick}\n\t\t\tidx={idx}\n\t\t\tclassName='word-box'\n\t\t\tstyle={{\n\t\t\t\tbackground: backgroundColor,\n\t\t\t\tborder: `5px solid ${borderColor}`,\n\t\t\t\tcolor: textColor\n\t\t\t\t// fontWeight: isChosen ? \"bold\" : \"normal\",\n\t\t\t\t// textTransform: isChosen ? \"uppercase\" : \"lowercase\"\n\t\t\t}}\n\t\t>\n\t\t\t{word}\n\t\t\t{isChosen && <span>&#10003;</span>}\n\t\t</Paper>\n\t);\n}\n\nexport default WordBox;\n","import React from \"react\";\nimport \"../stylesheets/Clue.scss\";\nimport { colors } from \"../models/Colors\";\nimport { Typography } from \"@material-ui/core\";\n\nfunction Clue({ nickname, team, clue, guesses }) {\n\treturn (\n\t\t<div className='clue-row' style={{ background: colors.CLUE_ROW_COLOR }}>\n\t\t\t<Typography\n\t\t\t\tclassName='nickname'\n\t\t\t\tstyle={{\n\t\t\t\t\tcolor:\n\t\t\t\t\t\tteam === \"red\"\n\t\t\t\t\t\t\t? colors.CLUE_RED_NAME\n\t\t\t\t\t\t\t: colors.CLUE_BLUE_NAME,\n\t\t\t\t\tfontWeight: \"bold\"\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{nickname}\n\t\t\t</Typography>\n\t\t\t<Typography>&nbsp;gives clue&nbsp;</Typography>\n\t\t\t<Typography className='clue' style={{ color: colors.CLUE_WORD }}>\n\t\t\t\t{clue.toUpperCase()}{\" \"}\n\t\t\t\t{guesses === \"infinity\" ? <span>&infin;</span> : guesses}\n\t\t\t</Typography>\n\t\t</div>\n\t);\n}\n\nexport default Clue;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport \"../stylesheets/GameRoom.scss\";\nimport {\n\tCard,\n\tCardContent,\n\tTypography,\n\tButton,\n\tBox,\n\tTextField,\n\tFormControl,\n\tInputLabel,\n\tSelect,\n\tMenuItem\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { colors } from \"../models/Colors\";\nimport WordBox from \"./WordBox\";\nimport Clue from \"./Clue\";\n\nconst useStyles = makeStyles((theme) => ({\n\twindow: {\n\t\tpadding: \"20px\",\n\t\tminHeight: \"100vh\",\n\t\twidth: \"100%\"\n\t},\n\trow: {\n\t\twidth: \"100%\",\n\t\tdisplay: \"flex\",\n\t\tflex: \"1\",\n\t\tjustifyContent: \"space-evenly\",\n\t\talignItems: \"flex-start\"\n\t}\n}));\n\nfunction GameRoom({\n\tusers,\n\tGAME_STATE,\n\thasWon,\n\tcurrentRound,\n\tcurrentUser,\n\tclues,\n\tisSpymasterTyping,\n\twords,\n\tredTeamRemainingCards,\n\tblueTeamRemainingCards,\n\tupdateCurrentUserInDB,\n\tupdateGameStateInDB,\n\tupdateCurrentRoundInDB,\n\tupdateIsSpymasterTypingInDB,\n\taddClueToDB,\n\tupdateWordInDB,\n\tupdateRedTeamRemainingCards,\n\tupdateBlueTeamRemainingCards,\n\tupdateClueInDB,\n\tupdateHasWonInDB,\n\tloadWords,\n\tremoveCluesInDB\n}) {\n\t// Set Testing Mode (Ignores warning for roles fulfilled to start game, if true)\n\tconst [testing, setTesting] = useState(false);\n\n\t// Class styles\n\tconst classes = useStyles();\n\n\t// Winner (Red/Blue)\n\tconst [winner, setWinner] = useState(\"\");\n\n\t// Current Clue\n\tconst [currentClue, setCurrentClue] = useState({\n\t\tnickname: currentUser.nickname,\n\t\tteam: currentUser.team,\n\t\tclue: \"\",\n\t\tguesses: 1\n\t});\n\n\t// Set spectator role\n\tuseEffect(() => {\n\t\tif (currentUser.role === \"\" && GAME_STATE === 1) {\n\t\t\tupdateCurrentUserInDB({ ...currentUser, role: \"spectator\" });\n\t\t}\n\t}, updateCurrentUserInDB);\n\n\tuseEffect(() => {\n\t\tconst color =\n\t\t\tcurrentRound === \"red\"\n\t\t\t\t? colors.RED_TURN_BACKGROUND\n\t\t\t\t: colors.BLUE_TURN_BACKGROUND;\n\n\t\tdocument.body.style.background = color;\n\t}, [currentRound]);\n\n\t// Buttons\n\tfunction handleJoinAsRedOperative() {\n\t\tif (currentUser.team === \"red\" && currentUser.role === \"operative\")\n\t\t\treturn;\n\n\t\tlet user = {\n\t\t\t...currentUser,\n\t\t\tteam: \"red\",\n\t\t\trole: \"operative\"\n\t\t};\n\n\t\tupdateCurrentUserInDB(user);\n\t}\n\n\tfunction handleJoinAsRedSpymaster() {\n\t\tif (currentUser.team === \"red\" && currentUser.role === \"spymaster\")\n\t\t\treturn;\n\n\t\tlet user = {\n\t\t\t...currentUser,\n\t\t\tteam: \"red\",\n\t\t\trole: \"spymaster\"\n\t\t};\n\n\t\tupdateCurrentUserInDB(user);\n\t}\n\n\tfunction handleJoinAsBlueOperative() {\n\t\tif (currentUser.team === \"blue\" && currentUser.role === \"operative\")\n\t\t\treturn;\n\n\t\tlet user = {\n\t\t\t...currentUser,\n\t\t\tteam: \"blue\",\n\t\t\trole: \"operative\"\n\t\t};\n\n\t\tupdateCurrentUserInDB(user);\n\t}\n\n\tfunction handleJoinAsBlueSpymaster() {\n\t\tif (currentUser.team === \"blue\" && currentUser.role === \"spymaster\")\n\t\t\treturn;\n\n\t\tlet user = {\n\t\t\t...currentUser,\n\t\t\tteam: \"blue\",\n\t\t\trole: \"spymaster\"\n\t\t};\n\n\t\tupdateCurrentUserInDB(user);\n\t}\n\n\t// Listeners\n\tfunction handleGuesses(e) {\n\t\tsetCurrentClue((prevState) => ({\n\t\t\t...prevState,\n\t\t\tguesses: e.target.value\n\t\t}));\n\t}\n\n\tfunction handleClueText(e) {\n\t\tsetCurrentClue((prevState) => ({\n\t\t\t...prevState,\n\t\t\tclue: e.target.value\n\t\t}));\n\t}\n\n\t// Give Clue Button\n\tfunction handleSubmitClue() {\n\t\taddClueToDB({\n\t\t\t...currentClue,\n\t\t\tclue: currentClue.clue.trim(),\n\t\t\tteam: currentRound\n\t\t});\n\t\tupdateIsSpymasterTypingInDB(false);\n\n\t\t// Set game log to scroll to bottom\n\t\tvar chat = document.querySelector(\".chat-box-dialog\");\n\t\tchat.scrollTop = chat.clientHeight;\n\t}\n\n\t// Check for winning conditions\n\tfunction checkWin() {\n\t\tif (redTeamRemainingCards === 0) {\n\t\t\treturn \"red\";\n\t\t} else if (blueTeamRemainingCards === 0) {\n\t\t\treturn \"blue\";\n\t\t}\n\t\treturn false;\n\t}\n\n\t// Switches turns in database\n\tfunction switchTurns() {\n\t\tif (currentRound === \"red\") {\n\t\t\tupdateCurrentRoundInDB(\"blue\");\n\t\t} else {\n\t\t\tupdateCurrentRoundInDB(\"red\");\n\t\t}\n\t\tupdateIsSpymasterTypingInDB(true);\n\t}\n\n\t// End turn button\n\tfunction handleEndTurn() {\n\t\tswitchTurns();\n\t}\n\n\t// Handles when a word is pressed\n\tfunction handleWordClick(e) {\n\t\tconst idx = e.target.getAttribute(\"idx\");\n\n\t\tif (\n\t\t\tcurrentUser.role !== \"operative\" ||\n\t\t\tisSpymasterTyping ||\n\t\t\thasWon ||\n\t\t\tcurrentUser.team !== currentRound ||\n\t\t\twords[idx].isRevealed\n\t\t)\n\t\t\treturn;\n\n\t\tlet word = words[idx];\n\t\tlet clue = clues[clues.length - 1];\n\n\t\t// Reveal word and update in database\n\t\tupdateWordInDB({ ...word, isRevealed: true, isChosen: true });\n\n\t\tif (word.team === \"black\") {\n\t\t\t// If black card\n\t\t\tif (currentRound === \"red\") {\n\t\t\t\tsetWinner(\"blue\");\n\t\t\t} else {\n\t\t\t\tsetWinner(\"red\");\n\t\t\t}\n\t\t\tendGame();\n\t\t\treturn;\n\t\t} else if (word.team === \"white\") {\n\t\t\t// If white card\n\t\t\tswitchTurns();\n\t\t\treturn;\n\t\t} else if (word.team === currentUser.team) {\n\t\t\t// If correct\n\t\t\t// Decrement guesses left\n\t\t\tif (clue.guesses !== \"infinity\") {\n\t\t\t\tupdateClueInDB({ ...clue, guesses: clue.guesses - 1 });\n\t\t\t}\n\n\t\t\tif (currentRound === \"blue\") {\n\t\t\t\tupdateBlueTeamRemainingCards((prevState) => {\n\t\t\t\t\tif (prevState - 1 === 0) {\n\t\t\t\t\t\tsetWinner(\"blue\");\n\t\t\t\t\t\tendGame();\n\t\t\t\t\t}\n\t\t\t\t\treturn prevState - 1;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tupdateRedTeamRemainingCards((prevState) => {\n\t\t\t\t\tif (prevState - 1 === 0) {\n\t\t\t\t\t\tsetWinner(\"red\");\n\t\t\t\t\t\tendGame();\n\t\t\t\t\t}\n\t\t\t\t\treturn prevState - 1;\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\t// If chooses opposite team\n\t\t\tif (currentRound === \"red\") {\n\t\t\t\tupdateBlueTeamRemainingCards((prevState) => {\n\t\t\t\t\tif (prevState - 1 === 0) {\n\t\t\t\t\t\tsetWinner(\"blue\");\n\t\t\t\t\t\tendGame();\n\t\t\t\t\t}\n\t\t\t\t\treturn prevState - 1;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tupdateRedTeamRemainingCards((prevState) => {\n\t\t\t\t\tif (prevState - 1 === 0) {\n\t\t\t\t\t\tsetWinner(\"red\");\n\t\t\t\t\t\tendGame();\n\t\t\t\t\t}\n\t\t\t\t\treturn prevState - 1;\n\t\t\t\t});\n\t\t\t}\n\t\t\tswitchTurns();\n\t\t}\n\n\t\t// No more guesses, switch turns\n\t\tif (clue.guesses === 1) {\n\t\t\tswitchTurns();\n\t\t}\n\t}\n\n\t/**\n\t * See if all roles and players are fulfilled to start the game.\n\t */\n\tfunction startGame() {\n\t\t// Check if game is currently in testing mode\n\t\t// If so, will ignore warning to fulfill roles\n\t\tif (!testing) {\n\t\t\tlet redOperative = false;\n\t\t\tlet redSpymaster = false;\n\t\t\tlet blueOperative = false;\n\t\t\tlet blueSpymaster = false;\n\n\t\t\tfor (let user of users) {\n\t\t\t\tif (user.team === \"red\" && user.role === \"operative\") {\n\t\t\t\t\tredOperative = true;\n\t\t\t\t} else if (user.team === \"red\" && user.role === \"spymaster\") {\n\t\t\t\t\tredSpymaster = true;\n\t\t\t\t} else if (user.team === \"blue\" && user.role === \"operative\") {\n\t\t\t\t\tblueOperative = true;\n\t\t\t\t} else if (user.team === \"blue\" && user.role === \"spymaster\") {\n\t\t\t\t\tblueSpymaster = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tusers.length >= 4 &&\n\t\t\t\tredOperative &&\n\t\t\t\tredSpymaster &&\n\t\t\t\tblueOperative &&\n\t\t\t\tblueSpymaster\n\t\t\t) {\n\t\t\t\tupdateGameStateInDB(1);\n\t\t\t} else {\n\t\t\t\talert(\"Please have at least 4 players and each role fulfilled\");\n\t\t\t}\n\t\t} else {\n\t\t\tupdateGameStateInDB(1);\n\t\t}\n\t}\n\n\t// Ends game from a 5 second countdown\n\tfunction endGame() {\n\t\tupdateHasWonInDB(true);\n\t\tupdateIsSpymasterTypingInDB(true);\n\t\tsetTimeout(() => {\n\t\t\tupdateGameStateInDB(0);\n\t\t\tloadWords();\n\t\t\tupdateHasWonInDB(false);\n\t\t\tupdateIsSpymasterTypingInDB(true);\n\t\t\tupdateRedTeamRemainingCards(9);\n\t\t\tupdateBlueTeamRemainingCards(8);\n\t\t\tupdateCurrentRoundInDB(\"red\");\n\t\t\tremoveCluesInDB();\n\t\t}, 5000);\n\t}\n\n\treturn (\n\t\t<div className={classes.window}>\n\t\t\t<div className={classes.row}>\n\t\t\t\t{/* Red Card */}\n\t\t\t\t<Card\n\t\t\t\t\tstyle={{ background: colors.DARK_RED }}\n\t\t\t\t\tclassName='team-card'\n\t\t\t\t>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t{GAME_STATE === 1 && (\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tvariant='h4'\n\t\t\t\t\t\t\t\talign='right'\n\t\t\t\t\t\t\t\tstyle={{ color: \"#fff\" }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{redTeamRemainingCards}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t<Box mt={2} mb={2}>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tvariant='h6'\n\t\t\t\t\t\t\t\talign='left'\n\t\t\t\t\t\t\t\tstyle={{ color: \"#fff\" }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tOperative(s)\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t{/* List of Operatives (Red)*/}\n\t\t\t\t\t\t<Box mt={2} mb={2}>\n\t\t\t\t\t\t\t{users\n\t\t\t\t\t\t\t\t.filter(\n\t\t\t\t\t\t\t\t\t(u) =>\n\t\t\t\t\t\t\t\t\t\tu.team === \"red\" &&\n\t\t\t\t\t\t\t\t\t\tu.role === \"operative\"\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.map((u) => (\n\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\talign='left'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\twidth: \"fit-content\",\n\t\t\t\t\t\t\t\t\t\t\t\tpadding: \"1px 10px\",\n\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: \"15px\",\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: colors.LIGHT_RED,\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#fff\"\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{u.nickname}\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t{GAME_STATE === 0 && (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\tcolor='default'\n\t\t\t\t\t\t\t\tonClick={handleJoinAsRedOperative}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tdisplay:\n\t\t\t\t\t\t\t\t\t\tcurrentUser.team === \"red\" &&\n\t\t\t\t\t\t\t\t\t\tcurrentUser.role === \"operative\"\n\t\t\t\t\t\t\t\t\t\t\t? \"none\"\n\t\t\t\t\t\t\t\t\t\t\t: \"block\"\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tJoin as Operative\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t<Box mt={2} mb={2}>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tvariant='h6'\n\t\t\t\t\t\t\t\talign='left'\n\t\t\t\t\t\t\t\tstyle={{ color: \"#fff\" }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSpymaster(s)\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t{/* List of Spymasters (Red) */}\n\t\t\t\t\t\t<Box mt={2} mb={2}>\n\t\t\t\t\t\t\t{users\n\t\t\t\t\t\t\t\t.filter(\n\t\t\t\t\t\t\t\t\t(u) =>\n\t\t\t\t\t\t\t\t\t\tu.team === \"red\" &&\n\t\t\t\t\t\t\t\t\t\tu.role === \"spymaster\"\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.map((u) => (\n\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\talign='left'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\twidth: \"fit-content\",\n\t\t\t\t\t\t\t\t\t\t\t\tpadding: \"1px 10px\",\n\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: \"15px\",\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: colors.LIGHT_RED,\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#fff\"\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{u.nickname}\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t{GAME_STATE === 0 && (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\tcolor='default'\n\t\t\t\t\t\t\t\tonClick={handleJoinAsRedSpymaster}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tdisplay:\n\t\t\t\t\t\t\t\t\t\tcurrentUser.team === \"red\" &&\n\t\t\t\t\t\t\t\t\t\tcurrentUser.role === \"spymaster\"\n\t\t\t\t\t\t\t\t\t\t\t? \"none\"\n\t\t\t\t\t\t\t\t\t\t\t: \"block\"\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tJoin as Spymaster\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Card>\n\n\t\t\t\t{/* Game Board */}\n\t\t\t\t{GAME_STATE === 1 && (\n\t\t\t\t\t<div className='word-grid'>\n\t\t\t\t\t\t{words.map(\n\t\t\t\t\t\t\t({ word, team, isRevealed, isChosen }, idx) => (\n\t\t\t\t\t\t\t\t<WordBox\n\t\t\t\t\t\t\t\t\tword={word}\n\t\t\t\t\t\t\t\t\tteam={team}\n\t\t\t\t\t\t\t\t\tisRevealed={\n\t\t\t\t\t\t\t\t\t\tisRevealed ||\n\t\t\t\t\t\t\t\t\t\tcurrentUser.role === \"spymaster\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tisChosen={\n\t\t\t\t\t\t\t\t\t\tcurrentUser.role === \"spymaster\" &&\n\t\t\t\t\t\t\t\t\t\tisChosen\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tidx={idx}\n\t\t\t\t\t\t\t\t\tonClick={handleWordClick}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\n\t\t\t\t{/* Blue Card */}\n\t\t\t\t<Card\n\t\t\t\t\tstyle={{ background: colors.DARK_BLUE }}\n\t\t\t\t\tclassName='team-card'\n\t\t\t\t>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t{GAME_STATE === 1 && (\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tvariant='h4'\n\t\t\t\t\t\t\t\talign='right'\n\t\t\t\t\t\t\t\tstyle={{ color: \"#fff\" }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{blueTeamRemainingCards}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Box mt={2} mb={2}>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tvariant='h6'\n\t\t\t\t\t\t\t\talign='left'\n\t\t\t\t\t\t\t\tstyle={{ color: \"#fff\" }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tOperative(s)\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t{/* List of Operatives (Blue) */}\n\t\t\t\t\t\t<Box mt={2} mb={2}>\n\t\t\t\t\t\t\t{users\n\t\t\t\t\t\t\t\t.filter(\n\t\t\t\t\t\t\t\t\t(u) =>\n\t\t\t\t\t\t\t\t\t\tu.team === \"blue\" &&\n\t\t\t\t\t\t\t\t\t\tu.role === \"operative\"\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.map((u) => (\n\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\talign='left'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\twidth: \"fit-content\",\n\t\t\t\t\t\t\t\t\t\t\t\tpadding: \"1px 10px\",\n\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: \"15px\",\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: colors.LIGHT_BLUE,\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#fff\"\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{u.nickname}\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t{GAME_STATE === 0 && (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\tcolor='default'\n\t\t\t\t\t\t\t\tonClick={handleJoinAsBlueOperative}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tdisplay:\n\t\t\t\t\t\t\t\t\t\tcurrentUser.team === \"blue\" &&\n\t\t\t\t\t\t\t\t\t\tcurrentUser.role === \"operative\"\n\t\t\t\t\t\t\t\t\t\t\t? \"none\"\n\t\t\t\t\t\t\t\t\t\t\t: \"block\"\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tJoin as Operative\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Box mt={2} mb={2}>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tvariant='h6'\n\t\t\t\t\t\t\t\talign='left'\n\t\t\t\t\t\t\t\tstyle={{ color: \"#fff\" }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSpymaster(s)\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t{/* List of Spymasters (Blue) */}\n\t\t\t\t\t\t<Box mt={2} mb={2}>\n\t\t\t\t\t\t\t{users\n\t\t\t\t\t\t\t\t.filter(\n\t\t\t\t\t\t\t\t\t(u) =>\n\t\t\t\t\t\t\t\t\t\tu.team === \"blue\" &&\n\t\t\t\t\t\t\t\t\t\tu.role === \"spymaster\"\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.map((u) => (\n\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\talign='left'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\twidth: \"fit-content\",\n\t\t\t\t\t\t\t\t\t\t\t\tpadding: \"1px 10px\",\n\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: \"15px\",\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: colors.LIGHT_BLUE,\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#fff\"\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{u.nickname}\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t{GAME_STATE === 0 && (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\tcolor='default'\n\t\t\t\t\t\t\t\tonClick={handleJoinAsBlueSpymaster}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tdisplay:\n\t\t\t\t\t\t\t\t\t\tcurrentUser.team === \"blue\" &&\n\t\t\t\t\t\t\t\t\t\tcurrentUser.role === \"spymaster\"\n\t\t\t\t\t\t\t\t\t\t\t? \"none\"\n\t\t\t\t\t\t\t\t\t\t\t: \"block\"\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tJoin as Spymaster\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Card>\n\t\t\t</div>\n\n\t\t\t{/* Guess Row */}\n\t\t\t{GAME_STATE === 1 &&\n\t\t\t\tcurrentUser.team === currentRound &&\n\t\t\t\tcurrentUser.role === \"spymaster\" &&\n\t\t\t\tisSpymasterTyping &&\n\t\t\t\t!hasWon && (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={classes.row}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tpadding: \"30px\"\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<form noValidate autoComplete='off'>\n\t\t\t\t\t\t\t{/* Typing Clue */}\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tid='outlined-basic'\n\t\t\t\t\t\t\t\tlabel='Type Your Clue Here'\n\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\tonChange={handleClueText}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t&emsp;\n\t\t\t\t\t\t\t{/* Number of Guesses */}\n\t\t\t\t\t\t\t<FormControl variant='outlined'>\n\t\t\t\t\t\t\t\t<InputLabel id='demo-simple-select-outlined-label'>\n\t\t\t\t\t\t\t\t\tGuesses\n\t\t\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\tstyle={{ width: \"100px\" }}\n\t\t\t\t\t\t\t\t\tvalue={currentClue.guesses}\n\t\t\t\t\t\t\t\t\tonChange={handleGuesses}\n\t\t\t\t\t\t\t\t\tlabel='Guesses'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<MenuItem value={1}>1</MenuItem>\n\t\t\t\t\t\t\t\t\t<MenuItem value={2}>2</MenuItem>\n\t\t\t\t\t\t\t\t\t<MenuItem value={3}>3</MenuItem>\n\t\t\t\t\t\t\t\t\t<MenuItem value={4}>4</MenuItem>\n\t\t\t\t\t\t\t\t\t<MenuItem value={5}>5</MenuItem>\n\t\t\t\t\t\t\t\t\t<MenuItem value={6}>6</MenuItem>\n\t\t\t\t\t\t\t\t\t<MenuItem value={7}>7</MenuItem>\n\t\t\t\t\t\t\t\t\t<MenuItem value={8}>8</MenuItem>\n\t\t\t\t\t\t\t\t\t<MenuItem value={9}>9</MenuItem>\n\t\t\t\t\t\t\t\t\t<MenuItem value={\"infinity\"}>\n\t\t\t\t\t\t\t\t\t\t&infin;\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t&emsp;\n\t\t\t\t\t\t\t{/* Submit Clue Button */}\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\talign='center'\n\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\tonClick={handleSubmitClue}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tGive Clue\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\n\t\t\t{/* Start Button */}\n\t\t\t{GAME_STATE === 0 && (\n\t\t\t\t<div className={classes.row} style={{ padding: \"30px\" }}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\tcolor='default'\n\t\t\t\t\t\talign='center'\n\t\t\t\t\t\tonClick={startGame}\n\t\t\t\t\t>\n\t\t\t\t\t\tStart Game\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t{/* currentRound Text */}\n\t\t\t{GAME_STATE === 1 && (\n\t\t\t\t<div\n\t\t\t\t\tclassName={classes.row}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tpadding: \"30px\",\n\t\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\tdisplay: `${\n\t\t\t\t\t\t\tisSpymasterTyping &&\n\t\t\t\t\t\t\tcurrentUser.role === \"spymaster\" &&\n\t\t\t\t\t\t\tcurrentUser.team === currentRound\n\t\t\t\t\t\t\t\t? \"none\"\n\t\t\t\t\t\t\t\t: \"flex\"\n\t\t\t\t\t\t}`\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{/* Clue */}\n\t\t\t\t\t<Typography\n\t\t\t\t\t\tvariant='h6'\n\t\t\t\t\t\talign='center'\n\t\t\t\t\t\tclassName='clue'\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackground: \"#FFF\",\n\t\t\t\t\t\t\tborder: `5px solid ${colors.BLACK_CARD_BORDER}`\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{isSpymasterTyping\n\t\t\t\t\t\t\t? \"Waiting for clue...\"\n\t\t\t\t\t\t\t: clues[clues.length - 1]?.clue.toUpperCase()}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t{/* Spacing */}\n\t\t\t\t\t<span>&emsp;</span>\n\t\t\t\t\t{/* Clue Turns */}\n\t\t\t\t\t{!isSpymasterTyping && (\n\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\tvariant='h6'\n\t\t\t\t\t\t\talign='center'\n\t\t\t\t\t\t\tclassName='clue'\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tbackground: \"#FFF\",\n\t\t\t\t\t\t\t\tborder: `5px solid ${colors.BLACK_CARD_BORDER}`\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{clues[clues.length - 1]?.guesses === \"infinity\" ? (\n\t\t\t\t\t\t\t\t<span>&infin;</span>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\tclues[clues.length - 1]?.guesses\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t)}\n\t\t\t\t\t{/* Spacing */}\n\t\t\t\t\t<span>&emsp;</span>\n\t\t\t\t\t{!isSpymasterTyping &&\n\t\t\t\t\t\tcurrentUser.role === \"operative\" &&\n\t\t\t\t\t\tcurrentUser.team === currentRound && (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\talign='center'\n\t\t\t\t\t\t\t\tonClick={handleEndTurn}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tEnd Turn\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t{/* Clues Chat Box */}\n\t\t\t{GAME_STATE === 1 && (\n\t\t\t\t<div className='chat-box'>\n\t\t\t\t\t<Typography\n\t\t\t\t\t\tvariant='body1'\n\t\t\t\t\t\talign='center'\n\t\t\t\t\t\tclassName='chat-title'\n\t\t\t\t\t>\n\t\t\t\t\t\tGame Log\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<div className='chat-box-dialog'>\n\t\t\t\t\t\t{clues.map((clue) => (\n\t\t\t\t\t\t\t<Clue\n\t\t\t\t\t\t\t\tnickname={clue.nickname}\n\t\t\t\t\t\t\t\tteam={clue.team}\n\t\t\t\t\t\t\t\tclue={clue.clue}\n\t\t\t\t\t\t\t\tguesses={clue.guesses}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t{/* Winner Message */}\n\t\t\t{GAME_STATE === 1 && hasWon && (\n\t\t\t\t<>\n\t\t\t\t\t<div className='winner-background'></div>\n\t\t\t\t\t<div className='winner-text'>\n\t\t\t\t\t\t<Typography variant='h5'>\n\t\t\t\t\t\t\t{winner.toUpperCase()} TEAM HAS WON\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default GameRoom;\n","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Join from \"./components/Join\";\nimport GameRoom from \"./components/GameRoom\";\n\nfunction App() {\n\t// New user ID\n\tconst id = uuidv4();\n\n\t// Enable/Disable connection to database\n\tvar isOnline = true;\n\n\t// Firebase database\n\tvar db = firebase.database();\n\n\t// GAME_STATE (0 not started, 1 started)\n\tconst [GAME_STATE, setGameState] = useState(0);\n\n\t// True if game has been won\n\tconst [hasWon, setHasWon] = useState(false);\n\n\t// Words\n\tconst [words, setWords] = useState([]);\n\n\t// Current Round (Red, Blue)\n\tconst [currentRound, setCurrentRound] = useState(\"red\");\n\n\t// Spymaster Typing?\n\tconst [isSpymasterTyping, setIsSpymasterTyping] = useState(true);\n\n\t// Team Remaining Cards\n\tconst [redTeamRemainingCards, setRedTeamRemainingCards] = useState(9);\n\tconst [blueTeamRemainingCards, setBlueTeamRemainingCards] = useState(8);\n\n\t// CurrentUser\n\tconst [currentUser, setCurrentUser] = useState({\n\t\tid,\n\t\tnickname: \"\",\n\t\trole: \"\",\n\t\tteam: \"\"\n\t});\n\n\t// List of users online\n\tconst [users, setUsers] = useState([]);\n\n\t// CLUES\n\tconst [clues, setClues] = useState([]);\n\n\t// Testing conditions\n\tif (isOnline) db.goOnline();\n\telse db.goOffline();\n\n\t// When user connects, populate users according to database\n\tasync function loadUsers() {\n\t\tlet users = await db.ref(\"users\").get();\n\t\tconsole.log(\"---------------------------------\");\n\t\tconsole.log(\"Loaded Users\");\n\t\tconsole.log(\"---------------------------------\");\n\t\tconsole.log(Object.values(users.val()));\n\t\tsetUsers(Object.values(users.val()));\n\t}\n\n\tfunction loadWords() {\n\t\t// Import word.json and shuffle the order\n\t\tconst data = require(\"./data/words.json\")[\"words\"];\n\t\tlet randIdx = Math.floor(Math.random() * data.length);\n\t\tconst shuffle = require(\"shuffle-array\");\n\t\tconst words = shuffle(data[randIdx]);\n\t\tfor (let i = 0; i < words.length; i++) {\n\t\t\twords[i][\"id\"] = i;\n\t\t\tdb.ref(`words/word-${words[i][\"id\"]}`).set(words[i]);\n\t\t}\n\t}\n\n\t// On mount\n\tuseEffect(() => {\n\t\tloadUsers();\n\t}, [setUsers]);\n\n\t// On listeners\n\tuseEffect(() => {\n\t\tdb.ref(\"users\").on(\"child_added\", (snapshot) => {\n\t\t\t// Load words if length of users was previously 0\n\t\t\tsetUsers((prevState) => [...prevState, snapshot.val()]);\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(\"User Added\");\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(snapshot.val());\n\t\t});\n\n\t\tdb.ref(\"users\").on(\"child_removed\", (snapshot) => {\n\t\t\tsetUsers((prevState) => {\n\t\t\t\tif (prevState.length - 1 < 4) {\n\t\t\t\t\tdb.ref(\"GAME_STATE\").set(0);\n\t\t\t\t}\n\t\t\t\treturn prevState.filter(\n\t\t\t\t\t(user) => user.id !== snapshot.val().id\n\t\t\t\t);\n\t\t\t});\n\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(\"User Removed\");\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(snapshot.val());\n\t\t});\n\n\t\tdb.ref(\"users\").on(\"child_changed\", (snapshot) => {\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(\"User Changed\");\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(snapshot.val());\n\t\t\tsetUsers((prevState) =>\n\t\t\t\tprevState.map((user) =>\n\t\t\t\t\tuser.id === snapshot.val().id ? snapshot.val() : user\n\t\t\t\t)\n\t\t\t);\n\t\t});\n\n\t\tdb.ref(\"GAME_STATE\").on(\"value\", (snapshot) => {\n\t\t\tlet GAME_STATE = parseInt(snapshot.val());\n\n\t\t\tif (GAME_STATE === 0) {\n\t\t\t\tloadWords();\n\t\t\t}\n\n\t\t\tsetGameState(GAME_STATE);\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(\"GAME_STATE\");\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(snapshot.val());\n\t\t});\n\n\t\tdb.ref(\"hasWon\").on(\"value\", (snapshot) => {\n\t\t\tsetHasWon(snapshot.val());\n\t\t});\n\n\t\tdb.ref(\"isSpymasterTyping\").on(\"value\", (snapshot) => {\n\t\t\tsetIsSpymasterTyping(snapshot.val());\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(\"isSpymasterTyping\");\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(snapshot.val());\n\t\t});\n\n\t\tdb.ref(\"currentRound\").on(\"value\", (snapshot) => {\n\t\t\tsetCurrentRound(snapshot.val());\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(\"currentRound\");\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(snapshot.val());\n\t\t});\n\n\t\tdb.ref(\"RED_TEAM_REMAINING_CARDS\").on(\"value\", (snapshot) => {\n\t\t\tsetRedTeamRemainingCards(snapshot.val());\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(\"redTeamRemainingCards\");\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(snapshot.val());\n\t\t});\n\n\t\tdb.ref(\"BLUE_TEAM_REMAINING_CARDS\").on(\"value\", (snapshot) => {\n\t\t\tsetBlueTeamRemainingCards(snapshot.val());\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(\"blueTeamRemainingCards\");\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(snapshot.val());\n\t\t});\n\n\t\tdb.ref(\"clues\").on(\"child_added\", (snapshot) => {\n\t\t\t// let clues = snapshot.val() || [];\n\t\t\t// if (clues instanceof Array && clues.length === 0) {\n\t\t\t// \tsetClues([]);\n\t\t\t// } else {\n\t\t\tsetClues((prevState) => [...prevState, snapshot.val()]);\n\t\t\t// }\n\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(\"clues\");\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(snapshot.val());\n\t\t});\n\n\t\tdb.ref(\"clues\").on(\"child_removed\", (snapshot) => {\n\t\t\tsetClues([]);\n\t\t});\n\n\t\tdb.ref(\"clues\").on(\"child_changed\", (snapshot) => {\n\t\t\tsetClues((prevState) =>\n\t\t\t\tprevState.map((clue) =>\n\t\t\t\t\tclue.id === snapshot.val().id ? snapshot.val() : clue\n\t\t\t\t)\n\t\t\t);\n\t\t});\n\n\t\tdb.ref(\"words\").on(\"child_added\", (snapshot) => {\n\t\t\tif (words.length < 25) {\n\t\t\t\tsetWords((prevState) => [...prevState, snapshot.val()]);\n\t\t\t}\n\t\t});\n\n\t\tdb.ref(\"words\").on(\"child_removed\", (snapshot) => {\n\t\t\tsetWords((prevState) =>\n\t\t\t\tprevState.filter(\n\t\t\t\t\t(w) => parseInt(w.id) !== parseInt(snapshot.val().id)\n\t\t\t\t)\n\t\t\t);\n\t\t});\n\n\t\tdb.ref(\"words\").on(\"child_changed\", (snapshot) => {\n\t\t\t// Add id property to Word object\n\t\t\t// Modify object in words state at that id\n\t\t\tsetWords((prevState) =>\n\t\t\t\tprevState.map((word) =>\n\t\t\t\t\tword.id === snapshot.val().id ? snapshot.val() : word\n\t\t\t\t)\n\t\t\t);\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(\"words\");\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(snapshot.val());\n\t\t});\n\n\t\tdb.ref(`users/user-${currentUser.id}`).on(\"value\", (snapshot) => {\n\t\t\tsetCurrentUser(snapshot.val());\n\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(\"CurrentUser\");\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(snapshot.val());\n\t\t});\n\n\t\t// Add user to database\n\t\tdb.ref(`users/user-${currentUser.id}`).set(currentUser);\n\n\t\t// Remove user from database\n\t\tdb.ref(`users/user-${currentUser.id}`).onDisconnect().remove();\n\n\t\t// Stop listeners\n\t\treturn () => {\n\t\t\tdb.ref(\"users\").off();\n\t\t\tdb.ref(\"GAME_STATE\").off();\n\t\t\tdb.ref(\"hasWon\").off();\n\t\t\tdb.ref(\"isSpymasterTyping\").off();\n\t\t\tdb.ref(\"RED_TEAM_REMAINING_CARDS\").off();\n\t\t\tdb.ref(\"BLUE_TEAM_REMAINING_CARDS\").off();\n\t\t\tdb.ref(\"currentRound\").off();\n\t\t\tdb.ref(\"clues\").off();\n\t\t\tdb.ref(\"words\").off();\n\t\t\tdb.ref(`users/user-${currentUser.id}`).off();\n\t\t};\n\t}, [\n\t\tsetUsers,\n\t\tsetGameState,\n\t\tsetIsSpymasterTyping,\n\t\tsetCurrentRound,\n\t\tsetClues,\n\t\tsetWords,\n\t\tsetCurrentUser,\n\t\tsetHasWon\n\t]);\n\n\t// Updates GAME_STATE in database\n\t// value: int\n\tfunction updateGameStateInDB(value) {\n\t\tdb.ref(\"GAME_STATE\").set(value);\n\t}\n\n\t// Updates hasWon in database\n\t// value: true or false\n\tfunction updateHasWonInDB(value) {\n\t\tdb.ref(\"hasWon\").set(value);\n\t}\n\n\t// Updates isSpymasterTyping in database\n\t// isTyping: boolean\n\tfunction updateIsSpymasterTypingInDB(isTyping) {\n\t\tdb.ref(\"isSpymasterTyping\").set(isTyping);\n\t}\n\n\t// Updates CURRENT_ROUND in database\n\t// round: \"red\" || \"blue\"\n\tfunction updateCurrentRoundInDB(round) {\n\t\tdb.ref(\"currentRound\").set(round);\n\t}\n\n\t// Updates currentUser in database\n\t// user: object\n\tfunction updateCurrentUserInDB(user) {\n\t\tdb.ref(`users/user-${currentUser.id}`).set(user);\n\t}\n\n\t// Pushes new clue to database\n\t// clue: object\n\tfunction addClueToDB(clue) {\n\t\tclue[\"id\"] = uuidv4();\n\t\tdb.ref(`clues/clue-${clue[\"id\"]}`).set(clue);\n\t}\n\n\t// Updates clue in database\n\t// To decrement guesses\n\t// clue: object\n\tfunction updateClueInDB(clue) {\n\t\t// if (clue instanceof Array && clue.length === 0) {\n\t\t// \tdb.ref(\"clues\").remove();\n\t\t// \tsetClues([]);\n\t\t// } else {\n\t\tdb.ref(`clues/clue-${clue.id}`).set(clue);\n\t\t// }\n\t}\n\n\t// Removes all clues in database\n\tfunction removeCluesInDB() {\n\t\tdb.ref(\"clues\").remove();\n\t}\n\n\t// Update word at id\n\t// word: object\n\tfunction updateWordInDB(word) {\n\t\tdb.ref(`words/word-${word.id}`).set(word);\n\t}\n\n\t// Update RED_TEAM_REMAINING_CARDS in database\n\t// value: new score\n\tfunction updateRedTeamRemainingCards(value) {\n\t\tdb.ref(`RED_TEAM_REMAINING_CARDS`).set(value);\n\t}\n\n\t// Update BLUE_TEAM_REMAINING_CARDS in database\n\t// value: new score\n\tfunction updateBlueTeamRemainingCards(value) {\n\t\tdb.ref(`BLUE_TEAM_REMAINING_CARDS`).set(value);\n\t}\n\n\treturn (\n\t\t<Router>\n\t\t\t{/* For each path */}\n\n\t\t\t<Switch>\n\t\t\t\t<Route path='/game'>\n\t\t\t\t\t<GameRoom\n\t\t\t\t\t\tusers={users}\n\t\t\t\t\t\tGAME_STATE={GAME_STATE}\n\t\t\t\t\t\thasWon={hasWon}\n\t\t\t\t\t\tcurrentRound={currentRound}\n\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t\tclues={clues}\n\t\t\t\t\t\tisSpymasterTyping={isSpymasterTyping}\n\t\t\t\t\t\twords={words}\n\t\t\t\t\t\tredTeamRemainingCards={redTeamRemainingCards}\n\t\t\t\t\t\tblueTeamRemainingCards={blueTeamRemainingCards}\n\t\t\t\t\t\tupdateCurrentUserInDB={updateCurrentUserInDB}\n\t\t\t\t\t\tupdateGameStateInDB={updateGameStateInDB}\n\t\t\t\t\t\tupdateCurrentRoundInDB={updateCurrentRoundInDB}\n\t\t\t\t\t\tupdateIsSpymasterTypingInDB={\n\t\t\t\t\t\t\tupdateIsSpymasterTypingInDB\n\t\t\t\t\t\t}\n\t\t\t\t\t\taddClueToDB={addClueToDB}\n\t\t\t\t\t\tupdateWordInDB={updateWordInDB}\n\t\t\t\t\t\tupdateRedTeamRemainingCards={\n\t\t\t\t\t\t\tupdateRedTeamRemainingCards\n\t\t\t\t\t\t}\n\t\t\t\t\t\tupdateBlueTeamRemainingCards={\n\t\t\t\t\t\t\tupdateBlueTeamRemainingCards\n\t\t\t\t\t\t}\n\t\t\t\t\t\tupdateClueInDB={updateClueInDB}\n\t\t\t\t\t\tupdateHasWonInDB={updateHasWonInDB}\n\t\t\t\t\t\tloadWords={loadWords}\n\t\t\t\t\t\tremoveCluesInDB={removeCluesInDB}\n\t\t\t\t\t/>\n\t\t\t\t</Route>\n\t\t\t\t<Route path='/join'>\n\t\t\t\t\t<Join\n\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t\tupdateCurrentUserInDB={updateCurrentUserInDB}\n\t\t\t\t\t/>\n\t\t\t\t</Route>\n\t\t\t\t{/* Keep root path on bottom */}\n\t\t\t\t<Route path='/'>\n\t\t\t\t\t<Home />\n\t\t\t\t</Route>\n\t\t\t\t{/*  */}\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport firebase from \"firebase/app\";\n\nfirebase.initializeApp({\n\tapiKey: process.env.REACT_APP_API_KEY,\n\tauthDomain: process.env.REACT_APP_AUTH_DOMAIN,\n\tdatabaseURL: process.env.REACT_APP_DATABASE_URL,\n\tprojectId: process.env.REACT_APP_PROJECT_ID,\n\tstorageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n\tmessagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n\tappId: process.env.REACT_APP_APP_ID\n});\n\nReactDOM.render(\n\t<React.Fragment>\n\t\t<App />\n\t</React.Fragment>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}