{"version":3,"sources":["components/Home.js","components/Join.js","models/Colors.js","components/WordBox.js","components/Clue.js","components/GameRoom.js","App.js","reportWebVitals.js","index.js"],"names":["Home","db","className","Typography","align","variant","to","style","textDecoration","Button","color","Accordion","AccordionSummary","expandIcon","ExpandMore","aria-controls","id","AccordionDetails","Join","currentUser","updateCurrentUserInDB","useState","isValid","setIsValid","nickname","setNickname","handleJoinRoomBtn","alert","fontSize","noValidate","autoComplete","TextField","label","value","onChange","e","target","trim","length","onClick","colors","WordBox","backgroundColor","borderColor","word","team","isRevealed","idx","classes","textColor","Grid","item","Paper","paper","background","border","Clue","clue","guesses","fontWeight","toUpperCase","useStyles","makeStyles","theme","window","padding","height","width","textAlign","minWidth","cursor","row","display","flex","justifyContent","alignItems","GameRoom","users","GAME_STATE","hasWon","currentRound","clues","isSpymasterTyping","words","redTeamRemainingCards","blueTeamRemainingCards","updateGameStateInDB","updateCurrentRoundInDB","updateIsSpymasterTypingInDB","addClueToDB","updateWordInDB","updateRedTeamRemainingCards","updateBlueTeamRemainingCards","updateClueInDB","updateHasWonInDB","currentClue","setCurrentClue","switchTurns","handleWordClick","parentElement","getAttribute","role","endGame","setTimeout","Card","CardContent","Box","mt","mb","filter","u","map","Fragment","borderRadius","user","container","spacing","xs","justify","prevState","FormControl","InputLabel","Select","MenuItem","redOperative","redSpymaster","blueOperative","blueSpymaster","App","uuidv4","firebase","database","setGameState","setHasWon","setWords","setCurrentRound","setIsSpymasterTyping","setRedTeamRemainingCards","setBlueTeamRemainingCards","setCurrentUser","setUsers","setClues","a","ref","get","console","log","Object","values","val","set","isTyping","remove","goOnline","useEffect","loadUsers","on","snapshot","parseInt","data","require","randIdx","Math","floor","random","shuffle","i","loadWords","w","onDisconnect","off","path","round","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b7e5892.chunk.js","sourcesContent":["import React from 'react';\nimport '../stylesheets/Home.scss';\nimport { Link } from 'react-router-dom';\nimport {\n\tButton,\n\tAccordion,\n\tAccordionSummary,\n\tTypography,\n\tAccordionDetails\n} from '@material-ui/core';\nimport { ExpandMore } from '@material-ui/icons';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction Home({ db }) {\n\treturn (\n\t\t<div className=\"main\">\n\t\t\t{/* Title and Author */}\n\t\t\t<div className=\"col center\">\n\t\t\t\t<Typography align=\"center\" variant=\"h3\">\n\t\t\t\t\tCodenames\n\t\t\t\t</Typography>\n\t\t\t\t<Typography align=\"center\" variant=\"h6\">\n\t\t\t\t\tby Jason Cheung\n\t\t\t\t</Typography>\n\t\t\t</div>\n\n\t\t\t{/* Create Game Button */}\n\t\t\t<div className=\"row center\">\n\t\t\t\t<Link to=\"/join\" style={{ textDecoration: 'none' }}>\n\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" className=\"btn\">\n\t\t\t\t\t\tJoin Room\n\t\t\t\t\t</Button>\n\t\t\t\t</Link>\n\t\t\t</div>\n\n\t\t\t{/* Instructions */}\n\t\t\t<div className=\"row center\">\n\t\t\t\t<Accordion className=\"accordion\">\n\t\t\t\t\t<AccordionSummary\n\t\t\t\t\t\texpandIcon={<ExpandMore />}\n\t\t\t\t\t\taria-controls=\"panel1a-content\"\n\t\t\t\t\t\tid=\"panel1a-header\">\n\t\t\t\t\t\t<Typography>Instructions</Typography>\n\t\t\t\t\t</AccordionSummary>\n\t\t\t\t\t<AccordionDetails>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t1. Click on the JOIN ROOM button.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t2. Enter your nickname and start the game.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography>3. Connect with your friends.</Typography>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t4. Share the room URL with your friends.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography>5. Enjoy the game!</Typography>\n\t\t\t\t\t</AccordionDetails>\n\t\t\t\t</Accordion>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport \"../stylesheets/Join.scss\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { TextField, Button, Typography } from \"@material-ui/core\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport firebase from \"firebase/app\";\n\nfunction Join({ currentUser, updateCurrentUserInDB }) {\n\tconst [isValid, setIsValid] = useState(false);\n\tconst [nickname, setNickname] = useState(\"\");\n\n\t// async function getGameState() {\n\t// \treturn await parseInt(db.ref().child('GAME_STATE').get());\n\t// }\n\n\tfunction handleNickname(e) {\n\t\tlet value = e.target.value.trim();\n\t\tsetIsValid(value.length > 0);\n\t\tsetNickname(value);\n\t}\n\n\tfunction handleJoinRoomBtn() {\n\t\t// Check if nickname is empty\n\t\tif (!isValid) {\n\t\t\talert(\"Please enter a valid nickname\");\n\t\t} else {\n\t\t\tupdateCurrentUserInDB({\n\t\t\t\t...currentUser,\n\t\t\t\tnickname\n\t\t\t});\n\t\t}\n\t}\n\n\t// function\n\n\treturn (\n\t\t<div className='window'>\n\t\t\t<div className='group-box'>\n\t\t\t\t<Typography variant='h5' align='center'>\n\t\t\t\t\tWelcome to Codenames\n\t\t\t\t</Typography>\n\t\t\t\t<Typography style={{ fontSize: \"15px\" }} align='center'>\n\t\t\t\t\tTo enter the room, choose a nickname.\n\t\t\t\t</Typography>\n\n\t\t\t\t<form className='form' noValidate autoComplete='off'>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tid='filled-basic'\n\t\t\t\t\t\tlabel='Enter Your Nickname'\n\t\t\t\t\t\tvalue={nickname}\n\t\t\t\t\t\tonChange={handleNickname}\n\t\t\t\t\t\tvariant='filled'\n\t\t\t\t\t/>\n\t\t\t\t\t<div className='spacer'></div>\n\t\t\t\t\t{isValid ? (\n\t\t\t\t\t\t<Link to='/game' style={{ textDecoration: \"none\" }}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\tonClick={handleJoinRoomBtn}\n\t\t\t\t\t\t\t\tclassName='btn'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tJoin Room\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\tonClick={handleJoinRoomBtn}\n\t\t\t\t\t\t\t\tclassName='btn'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tJoin Room\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Join;\n","export const colors = {\n\t// COLORS\n\tCARD_COLOR: \"#F3D8B4\",\n\tDARK_RED: \"#9F3B2C\",\n\tLIGHT_RED: \"#BF5B4C\",\n\tDARK_BLUE: \"#3284A3\",\n\tLIGHT_BLUE: \"#52A4C3\",\n\tBLACK_CARD: \"#535252\",\n\tBLACK_CARD_BORDER: \"#949494\",\n\tWHITE_CARD: \"#C7B08C\",\n\tWHITE_CARD_BORDER: \"#F7E0C4\",\n\tRED_CARD: \"#F26621\",\n\tRED_CARD_BORDER: \"#FFB87E\",\n\tBLUE_CARD: \"#FFB87E\",\n\tBLUE_CARD_BORDER: \"#ABE3EA\",\n\tCLUE_ROW_COLOR: \"#FFE6D5\",\n\tCLUE_RED_NAME: \"#C11F05\",\n\tCLUE_BLUE_NAME: \"#0179C5\",\n\tCLUE_WORD: \"#888888\",\n\tRED_TURN_BACKGROUND: \"#FFCCCB\",\n\tBLUE_TURN_BACKGROUND: \"#ADD8E6\"\n};\n","import React from \"react\";\nimport { colors } from \"../models/Colors\";\nimport { Grid, Paper } from \"@material-ui/core\";\n\nfunction WordBox({ word, team, isRevealed, idx, classes, onClick }) {\n\tlet backgroundColor,\n\t\tborderColor,\n\t\ttextColor = \"#fff\";\n\n\tif (!isRevealed) {\n\t\tbackgroundColor = colors.CARD_COLOR;\n\t\tborderColor = colors.WHITE_CARD_BORDER;\n\t\ttextColor = \"#000\";\n\t} else if (team === \"red\") {\n\t\tbackgroundColor = colors.LIGHT_RED;\n\t\tborderColor = colors.RED_CARD_BORDER;\n\t} else if (team === \"blue\") {\n\t\tbackgroundColor = colors.LIGHT_BLUE;\n\t\tborderColor = colors.BLUE_CARD_BORDER;\n\t} else if (team === \"white\") {\n\t\tbackgroundColor = colors.WHITE_CARD;\n\t\tborderColor = colors.WHITE_CARD_BORDER;\n\t} else if (team === \"black\") {\n\t\tbackgroundColor = colors.BLACK_CARD;\n\t\tborderColor = colors.BLACK_CARD_BORDER;\n\t}\n\n\treturn (\n\t\t<Grid item onClick={onClick} idx={idx}>\n\t\t\t<Paper\n\t\t\t\tclassName={classes.paper}\n\t\t\t\tstyle={{\n\t\t\t\t\tbackground: backgroundColor,\n\t\t\t\t\tborder: `5px solid ${borderColor}`,\n\t\t\t\t\tcolor: textColor\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{word}\n\t\t\t</Paper>\n\t\t</Grid>\n\t);\n}\n\nexport default WordBox;\n","import React from \"react\";\nimport \"../stylesheets/Clue.scss\";\nimport { colors } from \"../models/Colors\";\nimport { Typography } from \"@material-ui/core\";\nimport { fontWeight } from \"@material-ui/system\";\n\nfunction Clue({ nickname, team, clue, guesses }) {\n\treturn (\n\t\t<div className='clue-row' style={{ background: colors.CLUE_ROW_COLOR }}>\n\t\t\t<Typography\n\t\t\t\tclassName='nickname'\n\t\t\t\tstyle={{\n\t\t\t\t\tcolor:\n\t\t\t\t\t\tteam === \"red\"\n\t\t\t\t\t\t\t? colors.CLUE_RED_NAME\n\t\t\t\t\t\t\t: colors.CLUE_BLUE_NAME,\n\t\t\t\t\tfontWeight: \"bold\"\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{nickname}\n\t\t\t</Typography>\n\t\t\t<Typography>&nbsp;gives clue&nbsp;</Typography>\n\t\t\t<Typography className='clue' style={{ color: colors.CLUE_WORD }}>\n\t\t\t\t{clue.toUpperCase()}{\" \"}\n\t\t\t\t{guesses === \"infinity\" ? <span>&infin;</span> : guesses}\n\t\t\t</Typography>\n\t\t</div>\n\t);\n}\n\nexport default Clue;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport \"../stylesheets/GameRoom.scss\";\nimport {\n\tCard,\n\tCardContent,\n\tTypography,\n\tButton,\n\tBox,\n\tGrid,\n\tPaper,\n\tTextField,\n\tFormControl,\n\tInputLabel,\n\tSelect,\n\tMenuItem\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { colors } from \"../models/Colors\";\nimport WordBox from \"./WordBox\";\nimport Clue from \"./Clue\";\n\nconst useStyles = makeStyles((theme) => ({\n\twindow: {\n\t\tpadding: \"20px\",\n\t\theight: \"100vh\",\n\t\twidth: \"100%\"\n\t},\n\tpaper: {\n\t\tpadding: \"15px 10px\",\n\t\ttextAlign: \"center\",\n\t\tborder: \"2px solid #D1BC9D\",\n\t\tminWidth: \"150px\",\n\t\tcursor: \"pointer\",\n\t\tcolor: \"#fff\"\n\t},\n\trow: {\n\t\twidth: \"100%\",\n\t\tdisplay: \"flex\",\n\t\tflex: \"1\",\n\t\tjustifyContent: \"space-evenly\",\n\t\talignItems: \"flex-start\"\n\t}\n}));\n\nfunction GameRoom({\n\tusers,\n\tGAME_STATE,\n\thasWon,\n\tcurrentRound,\n\tcurrentUser,\n\tclues,\n\tisSpymasterTyping,\n\twords,\n\tredTeamRemainingCards,\n\tblueTeamRemainingCards,\n\tupdateCurrentUserInDB,\n\tupdateGameStateInDB,\n\tupdateCurrentRoundInDB,\n\tupdateIsSpymasterTypingInDB,\n\taddClueToDB,\n\tupdateWordInDB,\n\tupdateRedTeamRemainingCards,\n\tupdateBlueTeamRemainingCards,\n\tupdateClueInDB,\n\tupdateHasWonInDB\n}) {\n\t// Class styles\n\tconst classes = useStyles();\n\n\t// Current Clue\n\tconst [currentClue, setCurrentClue] = useState({\n\t\tnickname: currentUser.nickname,\n\t\tteam: currentUser.team,\n\t\tclue: \"\",\n\t\tguesses: 1\n\t});\n\n\t// Buttons\n\tfunction handleJoinAsRedOperative() {\n\t\tif (currentUser.team === \"red\" && currentUser.role === \"operative\")\n\t\t\treturn;\n\n\t\tlet user = {\n\t\t\t...currentUser,\n\t\t\tteam: \"red\",\n\t\t\trole: \"operative\"\n\t\t};\n\n\t\tupdateCurrentUserInDB(user);\n\t}\n\n\tfunction handleJoinAsRedSpymaster() {\n\t\tif (currentUser.team === \"red\" && currentUser.role === \"spymaster\")\n\t\t\treturn;\n\n\t\tlet user = {\n\t\t\t...currentUser,\n\t\t\tteam: \"red\",\n\t\t\trole: \"spymaster\"\n\t\t};\n\n\t\tupdateCurrentUserInDB(user);\n\t}\n\n\tfunction handleJoinAsBlueOperative() {\n\t\tif (currentUser.team === \"blue\" && currentUser.role === \"operative\")\n\t\t\treturn;\n\n\t\tlet user = {\n\t\t\t...currentUser,\n\t\t\tteam: \"blue\",\n\t\t\trole: \"operative\"\n\t\t};\n\n\t\tupdateCurrentUserInDB(user);\n\t}\n\n\tfunction handleJoinAsBlueSpymaster() {\n\t\tif (currentUser.team === \"blue\" && currentUser.role === \"spymaster\")\n\t\t\treturn;\n\n\t\tlet user = {\n\t\t\t...currentUser,\n\t\t\tteam: \"blue\",\n\t\t\trole: \"spymaster\"\n\t\t};\n\n\t\tupdateCurrentUserInDB(user);\n\t}\n\n\t// Listeners\n\tfunction handleGuesses(e) {\n\t\tsetCurrentClue((prevState) => ({\n\t\t\t...prevState,\n\t\t\tguesses: e.target.value\n\t\t}));\n\t}\n\n\tfunction handleClueText(e) {\n\t\tsetCurrentClue((prevState) => ({\n\t\t\t...prevState,\n\t\t\tclue: e.target.value.trim()\n\t\t}));\n\t}\n\n\t// Give Clue Button\n\tfunction handleSubmitClue() {\n\t\taddClueToDB(currentClue);\n\t\tupdateIsSpymasterTypingInDB(false);\n\t}\n\n\t// Check for winning conditions\n\tfunction checkWin() {\n\t\treturn redTeamRemainingCards === 1 || blueTeamRemainingCards === 1;\n\t}\n\n\t// Switches turns in database\n\tfunction switchTurns() {\n\t\tif (currentRound === \"red\") {\n\t\t\tupdateCurrentRoundInDB(\"blue\");\n\t\t} else {\n\t\t\tupdateCurrentRoundInDB(\"red\");\n\t\t}\n\t}\n\n\t// End turn button\n\tfunction handleEndTurn() {\n\t\tswitchTurns();\n\t\tupdateIsSpymasterTypingInDB(true);\n\t}\n\n\t// Handles when a word is pressed\n\tfunction handleWordClick(e) {\n\t\tconst idx = e.target.parentElement.getAttribute(\"idx\");\n\n\t\tif (\n\t\t\tcurrentUser.role === \"spymaster\" ||\n\t\t\tisSpymasterTyping ||\n\t\t\thasWon ||\n\t\t\tcurrentUser.team !== currentRound ||\n\t\t\twords[idx].isRevealed\n\t\t)\n\t\t\treturn;\n\n\t\tlet word = words[idx];\n\t\tlet clue = clues[clues.length - 1];\n\n\t\t// Reveal word and update in database\n\t\tupdateWordInDB({ ...word, isRevealed: true });\n\n\t\tif (word.team === \"black\") {\n\t\t\t// If black card\n\t\t\tswitchTurns();\n\t\t\tupdateHasWonInDB(true);\n\t\t\tupdateIsSpymasterTypingInDB(true);\n\t\t\tendGame();\n\t\t\treturn;\n\t\t} else if (word.team === \"white\") {\n\t\t\t// If white card\n\t\t\tswitchTurns();\n\t\t\tupdateIsSpymasterTypingInDB(true);\n\t\t\treturn;\n\t\t} else if (word.team === currentUser.team) {\n\t\t\t// If correct\n\t\t\t// Decrement guesses left\n\t\t\tif (clue.guesses !== \"infinity\") {\n\t\t\t\tupdateClueInDB({ ...clue, guesses: clue.guesses - 1 });\n\t\t\t}\n\n\t\t\tif (currentRound === \"blue\") {\n\t\t\t\tupdateBlueTeamRemainingCards(blueTeamRemainingCards - 1);\n\t\t\t} else {\n\t\t\t\tupdateRedTeamRemainingCards(redTeamRemainingCards - 1);\n\t\t\t}\n\t\t} else {\n\t\t\t// If chooses opposite team\n\t\t\tif (currentRound === \"red\") {\n\t\t\t\tupdateBlueTeamRemainingCards(blueTeamRemainingCards - 1);\n\t\t\t} else {\n\t\t\t\tupdateRedTeamRemainingCards(redTeamRemainingCards - 1);\n\t\t\t}\n\t\t\tupdateIsSpymasterTypingInDB(true);\n\t\t\tswitchTurns();\n\t\t}\n\n\t\t// Check if remaining cards = 0\n\t\tif (checkWin()) {\n\t\t\tupdateHasWonInDB(true);\n\t\t\tendGame();\n\t\t\treturn;\n\t\t}\n\n\t\t// No more guesses, switch turns\n\t\tif (clue.guesses === 1) {\n\t\t\tswitchTurns();\n\t\t\tupdateIsSpymasterTypingInDB(true);\n\t\t}\n\t}\n\n\tfunction startGame() {\n\t\tlet redOperative = false;\n\t\tlet redSpymaster = false;\n\t\tlet blueOperative = false;\n\t\tlet blueSpymaster = false;\n\n\t\tfor (let user of users) {\n\t\t\tif (user.team === \"red\" && user.role === \"operative\") {\n\t\t\t\tredOperative = true;\n\t\t\t} else if (user.team === \"red\" && user.role === \"spymaster\") {\n\t\t\t\tredSpymaster = true;\n\t\t\t} else if (user.team === \"blue\" && user.role === \"operative\") {\n\t\t\t\tblueOperative = true;\n\t\t\t} else if (user.team === \"blue\" && user.role === \"spymaster\") {\n\t\t\t\tblueSpymaster = true;\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\tusers.length >= 4 &&\n\t\t\tredOperative &&\n\t\t\tredSpymaster &&\n\t\t\tblueOperative &&\n\t\t\tblueSpymaster\n\t\t) {\n\t\t\tupdateGameStateInDB(1);\n\t\t} else {\n\t\t\talert(\"Please have at least 4 players and each role fulfilled\");\n\t\t}\n\t}\n\n\t// Ends game from a 5 second countdown\n\tfunction endGame() {\n\t\tsetTimeout(() => {\n\t\t\tupdateGameStateInDB(0);\n\t\t}, 5000);\n\t}\n\treturn (\n\t\t<div\n\t\t\tclassName={classes.window}\n\t\t\tstyle={{\n\t\t\t\tbackground:\n\t\t\t\t\tcurrentRound === \"red\"\n\t\t\t\t\t\t? colors.RED_TURN_BACKGROUND\n\t\t\t\t\t\t: colors.BLUE_TURN_BACKGROUND\n\t\t\t}}\n\t\t>\n\t\t\t<div className={classes.row}>\n\t\t\t\t{/* Red Card */}\n\t\t\t\t<Card\n\t\t\t\t\tstyle={{ background: colors.DARK_RED }}\n\t\t\t\t\tclassName='team-card'\n\t\t\t\t>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t{GAME_STATE === 1 && (\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tvariant='h4'\n\t\t\t\t\t\t\t\talign='right'\n\t\t\t\t\t\t\t\tstyle={{ color: \"#fff\" }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{redTeamRemainingCards}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t<Box mt={2} mb={2}>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tvariant='h6'\n\t\t\t\t\t\t\t\talign='left'\n\t\t\t\t\t\t\t\tstyle={{ color: \"#fff\" }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tOperative(s)\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t{/* List of Operatives (Red)*/}\n\t\t\t\t\t\t<Box mt={2} mb={2}>\n\t\t\t\t\t\t\t{users\n\t\t\t\t\t\t\t\t.filter(\n\t\t\t\t\t\t\t\t\t(u) =>\n\t\t\t\t\t\t\t\t\t\tu.team === \"red\" &&\n\t\t\t\t\t\t\t\t\t\tu.role === \"operative\"\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.map((u) => (\n\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\talign='left'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\twidth: \"fit-content\",\n\t\t\t\t\t\t\t\t\t\t\t\tpadding: \"1px 10px\",\n\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: \"15px\",\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: colors.LIGHT_RED,\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#fff\"\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{u.nickname}\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t{GAME_STATE === 0 && (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\tcolor='default'\n\t\t\t\t\t\t\t\tonClick={handleJoinAsRedOperative}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tdisplay:\n\t\t\t\t\t\t\t\t\t\tcurrentUser.team === \"red\" &&\n\t\t\t\t\t\t\t\t\t\tcurrentUser.role === \"operative\"\n\t\t\t\t\t\t\t\t\t\t\t? \"none\"\n\t\t\t\t\t\t\t\t\t\t\t: \"block\"\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tJoin as Operative\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t<Box mt={2} mb={2}>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tvariant='h6'\n\t\t\t\t\t\t\t\talign='left'\n\t\t\t\t\t\t\t\tstyle={{ color: \"#fff\" }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSpymaster(s)\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t{/* List of Spymasters (Red) */}\n\t\t\t\t\t\t<Box mt={2} mb={2}>\n\t\t\t\t\t\t\t{users\n\t\t\t\t\t\t\t\t.filter(\n\t\t\t\t\t\t\t\t\t(u) =>\n\t\t\t\t\t\t\t\t\t\tu.team === \"red\" &&\n\t\t\t\t\t\t\t\t\t\tu.role === \"spymaster\"\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.map((u) => (\n\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\talign='left'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\twidth: \"fit-content\",\n\t\t\t\t\t\t\t\t\t\t\t\tpadding: \"1px 10px\",\n\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: \"15px\",\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: colors.LIGHT_RED,\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#fff\"\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{u.nickname}\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t{GAME_STATE === 0 && (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\tcolor='default'\n\t\t\t\t\t\t\t\tonClick={handleJoinAsRedSpymaster}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tdisplay:\n\t\t\t\t\t\t\t\t\t\tcurrentUser.team === \"red\" &&\n\t\t\t\t\t\t\t\t\t\tcurrentUser.role === \"spymaster\"\n\t\t\t\t\t\t\t\t\t\t\t? \"none\"\n\t\t\t\t\t\t\t\t\t\t\t: \"block\"\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tJoin as Spymaster\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Card>\n\n\t\t\t\t{/* Game Board */}\n\t\t\t\t{GAME_STATE === 1 && (\n\t\t\t\t\t<Grid container spacing={1} xs={6} item justify='center'>\n\t\t\t\t\t\t{words.map(({ word, team, isRevealed }, idx) => (\n\t\t\t\t\t\t\t<WordBox\n\t\t\t\t\t\t\t\tword={word}\n\t\t\t\t\t\t\t\tteam={team}\n\t\t\t\t\t\t\t\tisRevealed={\n\t\t\t\t\t\t\t\t\tisRevealed ||\n\t\t\t\t\t\t\t\t\tcurrentUser.role === \"spymaster\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tidx={idx}\n\t\t\t\t\t\t\t\tclasses={classes}\n\t\t\t\t\t\t\t\tonClick={handleWordClick}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Grid>\n\t\t\t\t)}\n\n\t\t\t\t{/* Blue Card */}\n\t\t\t\t<Card\n\t\t\t\t\tstyle={{ background: colors.DARK_BLUE }}\n\t\t\t\t\tclassName='team-card'\n\t\t\t\t>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t{GAME_STATE === 1 && (\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tvariant='h4'\n\t\t\t\t\t\t\t\talign='right'\n\t\t\t\t\t\t\t\tstyle={{ color: \"#fff\" }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{blueTeamRemainingCards}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Box mt={2} mb={2}>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tvariant='h6'\n\t\t\t\t\t\t\t\talign='left'\n\t\t\t\t\t\t\t\tstyle={{ color: \"#fff\" }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tOperative(s)\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t{/* List of Operatives (Blue) */}\n\t\t\t\t\t\t<Box mt={2} mb={2}>\n\t\t\t\t\t\t\t{users\n\t\t\t\t\t\t\t\t.filter(\n\t\t\t\t\t\t\t\t\t(u) =>\n\t\t\t\t\t\t\t\t\t\tu.team === \"blue\" &&\n\t\t\t\t\t\t\t\t\t\tu.role === \"operative\"\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.map((u) => (\n\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\talign='left'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\twidth: \"fit-content\",\n\t\t\t\t\t\t\t\t\t\t\t\tpadding: \"1px 10px\",\n\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: \"15px\",\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: colors.LIGHT_BLUE,\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#fff\"\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{u.nickname}\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t{GAME_STATE === 0 && (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\tcolor='default'\n\t\t\t\t\t\t\t\tonClick={handleJoinAsBlueOperative}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tdisplay:\n\t\t\t\t\t\t\t\t\t\tcurrentUser.team === \"blue\" &&\n\t\t\t\t\t\t\t\t\t\tcurrentUser.role === \"operative\"\n\t\t\t\t\t\t\t\t\t\t\t? \"none\"\n\t\t\t\t\t\t\t\t\t\t\t: \"block\"\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tJoin as Operative\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Box mt={2} mb={2}>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tvariant='h6'\n\t\t\t\t\t\t\t\talign='left'\n\t\t\t\t\t\t\t\tstyle={{ color: \"#fff\" }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSpymaster(s)\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t{/* List of Spymasters (Blue) */}\n\t\t\t\t\t\t<Box mt={2} mb={2}>\n\t\t\t\t\t\t\t{users\n\t\t\t\t\t\t\t\t.filter(\n\t\t\t\t\t\t\t\t\t(u) =>\n\t\t\t\t\t\t\t\t\t\tu.team === \"blue\" &&\n\t\t\t\t\t\t\t\t\t\tu.role === \"spymaster\"\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.map((u) => (\n\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\talign='left'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\twidth: \"fit-content\",\n\t\t\t\t\t\t\t\t\t\t\t\tpadding: \"1px 10px\",\n\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: \"15px\",\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: colors.LIGHT_BLUE,\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#fff\"\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{u.nickname}\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t{GAME_STATE === 0 && (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\tcolor='default'\n\t\t\t\t\t\t\t\tonClick={handleJoinAsBlueSpymaster}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tdisplay:\n\t\t\t\t\t\t\t\t\t\tcurrentUser.team === \"blue\" &&\n\t\t\t\t\t\t\t\t\t\tcurrentUser.role === \"spymaster\"\n\t\t\t\t\t\t\t\t\t\t\t? \"none\"\n\t\t\t\t\t\t\t\t\t\t\t: \"block\"\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tJoin as Spymaster\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Card>\n\t\t\t</div>\n\n\t\t\t{/* Guess Row */}\n\t\t\t{GAME_STATE === 1 &&\n\t\t\t\tcurrentUser.team === currentRound &&\n\t\t\t\tcurrentUser.role === \"spymaster\" &&\n\t\t\t\tisSpymasterTyping &&\n\t\t\t\t!hasWon && (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={classes.row}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tpadding: \"30px\"\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<form noValidate autoComplete='off'>\n\t\t\t\t\t\t\t{/* Typing Clue */}\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tid='outlined-basic'\n\t\t\t\t\t\t\t\tlabel='Type Your Clue Here'\n\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\tonChange={handleClueText}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t&emsp;\n\t\t\t\t\t\t\t{/* Number of Guesses */}\n\t\t\t\t\t\t\t<FormControl variant='outlined'>\n\t\t\t\t\t\t\t\t<InputLabel id='demo-simple-select-outlined-label'>\n\t\t\t\t\t\t\t\t\tGuesses\n\t\t\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\tstyle={{ width: \"100px\" }}\n\t\t\t\t\t\t\t\t\tvalue={currentClue.guesses}\n\t\t\t\t\t\t\t\t\tonChange={handleGuesses}\n\t\t\t\t\t\t\t\t\tlabel='Guesses'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<MenuItem value={1}>1</MenuItem>\n\t\t\t\t\t\t\t\t\t<MenuItem value={2}>2</MenuItem>\n\t\t\t\t\t\t\t\t\t<MenuItem value={3}>3</MenuItem>\n\t\t\t\t\t\t\t\t\t<MenuItem value={4}>4</MenuItem>\n\t\t\t\t\t\t\t\t\t<MenuItem value={5}>5</MenuItem>\n\t\t\t\t\t\t\t\t\t<MenuItem value={6}>6</MenuItem>\n\t\t\t\t\t\t\t\t\t<MenuItem value={7}>7</MenuItem>\n\t\t\t\t\t\t\t\t\t<MenuItem value={8}>8</MenuItem>\n\t\t\t\t\t\t\t\t\t<MenuItem value={9}>9</MenuItem>\n\t\t\t\t\t\t\t\t\t<MenuItem value={\"infinity\"}>\n\t\t\t\t\t\t\t\t\t\t&infin;\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t&emsp;\n\t\t\t\t\t\t\t{/* Submit Clue Button */}\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\talign='center'\n\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\tonClick={handleSubmitClue}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tGive Clue\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\n\t\t\t{/* Start Button */}\n\t\t\t{GAME_STATE === 0 && (\n\t\t\t\t<div className={classes.row} style={{ padding: \"30px\" }}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\tcolor='default'\n\t\t\t\t\t\talign='center'\n\t\t\t\t\t\tonClick={startGame}\n\t\t\t\t\t>\n\t\t\t\t\t\tStart Game\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t{/* currentRound Text */}\n\t\t\t{GAME_STATE === 1 && (\n\t\t\t\t<div\n\t\t\t\t\tclassName={classes.row}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tpadding: \"30px\",\n\t\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\t\talignItems: \"center\"\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Typography\n\t\t\t\t\t\tvariant='h6'\n\t\t\t\t\t\talign='center'\n\t\t\t\t\t\tclassName='clue'\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackground: \"#FFF\",\n\t\t\t\t\t\t\tborder: `5px solid ${colors.BLACK_CARD_BORDER}`\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{isSpymasterTyping\n\t\t\t\t\t\t\t? \"Waiting for clue...\"\n\t\t\t\t\t\t\t: clues[clues.length - 1]?.clue.toUpperCase()}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t{!isSpymasterTyping && (\n\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\tvariant='h6'\n\t\t\t\t\t\t\talign='center'\n\t\t\t\t\t\t\tclassName='clue'\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tbackground: \"#FFF\",\n\t\t\t\t\t\t\t\tborder: `5px solid ${colors.BLACK_CARD_BORDER}`\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{clues[clues.length - 1]?.guesses === \"infinity\" ? (\n\t\t\t\t\t\t\t\t<span>&infin;</span>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\tclues[clues.length - 1]?.guesses\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t)}\n\t\t\t\t\t{!isSpymasterTyping &&\n\t\t\t\t\t\tcurrentUser.role === \"operative\" &&\n\t\t\t\t\t\tcurrentUser.team === currentRound && (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\talign='center'\n\t\t\t\t\t\t\t\tonClick={handleEndTurn}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tEnd Turn\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t{/* Clues Chat Box */}\n\t\t\t{GAME_STATE === 1 && (\n\t\t\t\t<div className='chat-box'>\n\t\t\t\t\t<Typography variant='body1' align='center'>\n\t\t\t\t\t\tGame Log\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<div className='chat-box-dialog'>\n\t\t\t\t\t\t{clues.map((clue) => (\n\t\t\t\t\t\t\t<Clue\n\t\t\t\t\t\t\t\tnickname={clue.nickname}\n\t\t\t\t\t\t\t\tteam={clue.team}\n\t\t\t\t\t\t\t\tclue={clue.clue}\n\t\t\t\t\t\t\t\tguesses={clue.guesses}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t{/* Winner Message */}\n\t\t\t{GAME_STATE === 1 && hasWon && (\n\t\t\t\t<div className={classes.row}>\n\t\t\t\t\t<Typography variant='h5'>\n\t\t\t\t\t\t{currentRound.toUpperCase()} TEAM HAS WON\n\t\t\t\t\t</Typography>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default GameRoom;\n","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Join from \"./components/Join\";\nimport GameRoom from \"./components/GameRoom\";\n\nfunction App() {\n\t// New user ID\n\tconst id = uuidv4();\n\n\t// Enable/Disable connection to database\n\tvar isOnline = true;\n\n\t// Firebase database\n\tvar db = firebase.database();\n\n\t// GAME_STATE (0 not started, 1 started)\n\tconst [GAME_STATE, setGameState] = useState(0);\n\n\t// True if game has been won\n\tconst [hasWon, setHasWon] = useState(false);\n\n\t// Words\n\tconst [words, setWords] = useState([]);\n\n\t// Current Round (Red, Blue)\n\tconst [currentRound, setCurrentRound] = useState(\"red\");\n\n\t// Spymaster Typing?\n\tconst [isSpymasterTyping, setIsSpymasterTyping] = useState(true);\n\n\t// Team Remaining Cards\n\tconst [redTeamRemainingCards, setRedTeamRemainingCards] = useState(9);\n\tconst [blueTeamRemainingCards, setBlueTeamRemainingCards] = useState(8);\n\n\t// CurrentUser\n\tconst [currentUser, setCurrentUser] = useState({\n\t\tid,\n\t\tnickname: \"\",\n\t\trole: \"\",\n\t\tteam: \"\"\n\t});\n\n\t// List of users online\n\tconst [users, setUsers] = useState([]);\n\n\t// CLUES\n\tconst [clues, setClues] = useState([]);\n\n\t// Guesses for operatives\n\tconst [guessesRemaining, setGuessesRemaining] = useState(1);\n\n\t// Testing conditions\n\tif (isOnline) db.goOnline();\n\telse db.goOffline();\n\n\t// When user connects, populate users according to database\n\tasync function loadUsers() {\n\t\tlet users = await db.ref(\"users\").get();\n\t\tconsole.log(\"---------------------------------\");\n\t\tconsole.log(\"Loaded Users\");\n\t\tconsole.log(\"---------------------------------\");\n\t\tconsole.log(Object.values(users.val()));\n\t\tsetUsers(Object.values(users.val()));\n\t}\n\n\tfunction loadWords() {\n\t\t// Import word.json and shuffle the order\n\t\tconst data = require(\"./data/words.json\")[\"words\"];\n\t\tlet randIdx = Math.floor(Math.random() * data.length);\n\t\tconst shuffle = require(\"shuffle-array\");\n\t\tconst words = shuffle(data[randIdx]);\n\t\tfor (let i = 0; i < words.length; i++) {\n\t\t\twords[i][\"id\"] = i;\n\t\t\tdb.ref(`words/word-${words[i][\"id\"]}`).set(words[i]);\n\t\t}\n\t}\n\n\t// On mount\n\tuseEffect(() => {\n\t\tloadUsers();\n\t}, [setUsers]);\n\n\t// On listeners\n\tuseEffect(() => {\n\t\tdb.ref(\"users\").on(\"child_added\", (snapshot) => {\n\t\t\t// Load words if length of users was previously 0\n\t\t\tsetUsers((prevState) => [...prevState, snapshot.val()]);\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(\"User Added\");\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(snapshot.val());\n\t\t});\n\n\t\tdb.ref(\"users\").on(\"child_removed\", (snapshot) => {\n\t\t\tsetUsers((prevState) => {\n\t\t\t\tif (prevState.length - 1 < 4) {\n\t\t\t\t\tdb.ref(\"GAME_STATE\").set(0);\n\t\t\t\t}\n\t\t\t\treturn prevState.filter(\n\t\t\t\t\t(user) => user.id !== snapshot.val().id\n\t\t\t\t);\n\t\t\t});\n\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(\"User Removed\");\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(snapshot.val());\n\t\t});\n\n\t\tdb.ref(\"users\").on(\"child_changed\", (snapshot) => {\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(\"User Changed\");\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(snapshot.val());\n\t\t\tsetUsers((prevState) =>\n\t\t\t\tprevState.map((user) =>\n\t\t\t\t\tuser.id === snapshot.val().id ? snapshot.val() : user\n\t\t\t\t)\n\t\t\t);\n\t\t});\n\n\t\tdb.ref(\"GAME_STATE\").on(\"value\", (snapshot) => {\n\t\t\tlet GAME_STATE = parseInt(snapshot.val());\n\t\t\t// NEED FOR WORDS TO SORT PROPERLY\n\t\t\tif (GAME_STATE === 0) {\n\t\t\t\tloadWords();\n\t\t\t\tupdateHasWonInDB(false);\n\t\t\t\tupdateIsSpymasterTypingInDB(true);\n\t\t\t\tupdateRedTeamRemainingCards(9);\n\t\t\t\tupdateBlueTeamRemainingCards(8);\n\t\t\t\tupdateClueInDB([]);\n\t\t\t}\n\n\t\t\tsetGameState(GAME_STATE);\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(\"GAME_STATE\");\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(snapshot.val());\n\t\t});\n\n\t\tdb.ref(\"hasWon\").on(\"value\", (snapshot) => {\n\t\t\tsetHasWon(snapshot.val());\n\t\t});\n\n\t\tdb.ref(\"isSpymasterTyping\").on(\"value\", (snapshot) => {\n\t\t\tsetIsSpymasterTyping(snapshot.val());\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(\"isSpymasterTyping\");\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(snapshot.val());\n\t\t});\n\n\t\tdb.ref(\"currentRound\").on(\"value\", (snapshot) => {\n\t\t\tsetCurrentRound(snapshot.val());\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(\"currentRound\");\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(snapshot.val());\n\t\t});\n\n\t\tdb.ref(\"RED_TEAM_REMAINING_CARDS\").on(\"value\", (snapshot) => {\n\t\t\tsetRedTeamRemainingCards(snapshot.val());\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(\"redTeamRemainingCards\");\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(snapshot.val());\n\t\t});\n\n\t\tdb.ref(\"BLUE_TEAM_REMAINING_CARDS\").on(\"value\", (snapshot) => {\n\t\t\tsetBlueTeamRemainingCards(snapshot.val());\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(\"blueTeamRemainingCards\");\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(snapshot.val());\n\t\t});\n\n\t\tdb.ref(\"clues\").on(\"child_added\", (snapshot) => {\n\t\t\tlet clues = snapshot.val() || [];\n\t\t\tif (clues === []) {\n\t\t\t\tsetClues([]);\n\t\t\t} else {\n\t\t\t\tsetClues((prevState) => [...prevState, snapshot.val()]);\n\t\t\t}\n\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(\"clues\");\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(snapshot.val());\n\t\t});\n\n\t\tdb.ref(\"clues\").on(\"child_changed\", (snapshot) => {\n\t\t\tsetClues((prevState) =>\n\t\t\t\tprevState.map((clue) =>\n\t\t\t\t\tclue.id === snapshot.val().id ? snapshot.val() : clue\n\t\t\t\t)\n\t\t\t);\n\t\t});\n\n\t\tdb.ref(\"words\").on(\"child_added\", (snapshot) => {\n\t\t\tsetWords((prevState) => [...prevState, snapshot.val()]);\n\t\t});\n\n\t\tdb.ref(\"words\").on(\"child_removed\", (snapshot) => {\n\t\t\tsetWords((prevState) =>\n\t\t\t\tprevState.filter(\n\t\t\t\t\t(w) => parseInt(w.id) !== parseInt(snapshot.val().id)\n\t\t\t\t)\n\t\t\t);\n\t\t});\n\n\t\tdb.ref(\"words\").on(\"child_changed\", (snapshot) => {\n\t\t\t// Add id property to Word object\n\t\t\t// Modify object in words state at that id\n\t\t\tsetWords((prevState) =>\n\t\t\t\tprevState.map((word) =>\n\t\t\t\t\tword.id === snapshot.val().id ? snapshot.val() : word\n\t\t\t\t)\n\t\t\t);\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(\"words\");\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(snapshot.val());\n\t\t});\n\n\t\tdb.ref(`users/user-${currentUser.id}`).on(\"value\", (snapshot) => {\n\t\t\tsetCurrentUser(snapshot.val());\n\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(\"CurrentUser\");\n\t\t\t// console.log(\"---------------------------------\");\n\t\t\t// console.log(snapshot.val());\n\t\t});\n\n\t\t// Add user to database\n\t\tdb.ref(`users/user-${currentUser.id}`).set(currentUser);\n\n\t\t// Remove user from database\n\t\tdb.ref(`users/user-${currentUser.id}`).onDisconnect().remove();\n\n\t\t// Stop listeners\n\t\treturn () => {\n\t\t\tdb.ref(\"users\").off();\n\t\t\tdb.ref(\"GAME_STATE\").off();\n\t\t\tdb.ref(\"hasWon\").off();\n\t\t\tdb.ref(\"isSpymasterTyping\").off();\n\t\t\tdb.ref(\"RED_TEAM_REMAINING_CARDS\").off();\n\t\t\tdb.ref(\"BLUE_TEAM_REMAINING_CARDS\").off();\n\t\t\tdb.ref(\"currentRound\").off();\n\t\t\tdb.ref(\"clues\").off();\n\t\t\tdb.ref(\"words\").off();\n\t\t\tdb.ref(`users/user-${currentUser.id}`).off();\n\t\t};\n\t}, [\n\t\tsetUsers,\n\t\tsetGameState,\n\t\tsetIsSpymasterTyping,\n\t\tsetCurrentRound,\n\t\tsetClues,\n\t\tsetWords,\n\t\tsetCurrentUser,\n\t\tsetHasWon\n\t]);\n\n\t// Updates GAME_STATE in database\n\t// value: int\n\tfunction updateGameStateInDB(value) {\n\t\tdb.ref(\"GAME_STATE\").set(value);\n\t}\n\n\t// Updates hasWon in database\n\t// value: true or false\n\tfunction updateHasWonInDB(value) {\n\t\tdb.ref(\"hasWon\").set(value);\n\t}\n\n\t// Updates isSpymasterTyping in database\n\t// isTyping: boolean\n\tfunction updateIsSpymasterTypingInDB(isTyping) {\n\t\tdb.ref(\"isSpymasterTyping\").set(isTyping);\n\t}\n\n\t// Updates CURRENT_ROUND in database\n\t// round: \"red\" || \"blue\"\n\tfunction updateCurrentRoundInDB(round) {\n\t\tdb.ref(\"currentRound\").set(round);\n\t}\n\n\t// Updates currentUser in database\n\t// user: object\n\tfunction updateCurrentUserInDB(user) {\n\t\tdb.ref(`users/user-${currentUser.id}`).set(user);\n\t}\n\n\t// Pushes new clue to database\n\t// clue: object\n\tfunction addClueToDB(clue) {\n\t\tclue[\"id\"] = uuidv4();\n\t\tdb.ref(`clues/clue-${clue[\"id\"]}`).set(clue);\n\t}\n\n\t// Updates clue in database\n\t// To decrement guesses\n\t// clue: object\n\tfunction updateClueInDB(clue) {\n\t\tif (clue === []) db.ref(\"clues\").remove();\n\t\telse db.ref(`clues/clue-${clue.id}`).set(clue);\n\t}\n\n\t// Update word at id\n\t// word: object\n\tfunction updateWordInDB(word) {\n\t\tdb.ref(`words/word-${word.id}`).set(word);\n\t}\n\n\t// Update RED_TEAM_REMAINING_CARDS in database\n\t// value: new score\n\tfunction updateRedTeamRemainingCards(value) {\n\t\tdb.ref(`RED_TEAM_REMAINING_CARDS`).set(value);\n\t}\n\n\t// Update BLUE_TEAM_REMAINING_CARDS in database\n\t// value: new score\n\tfunction updateBlueTeamRemainingCards(value) {\n\t\tdb.ref(`BLUE_TEAM_REMAINING_CARDS`).set(value);\n\t}\n\n\treturn (\n\t\t<Router>\n\t\t\t{/* For each path */}\n\n\t\t\t<Switch>\n\t\t\t\t<Route path='/game'>\n\t\t\t\t\t<GameRoom\n\t\t\t\t\t\tusers={users}\n\t\t\t\t\t\tGAME_STATE={GAME_STATE}\n\t\t\t\t\t\thasWon={hasWon}\n\t\t\t\t\t\tcurrentRound={currentRound}\n\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t\tclues={clues}\n\t\t\t\t\t\tisSpymasterTyping={isSpymasterTyping}\n\t\t\t\t\t\twords={words}\n\t\t\t\t\t\tredTeamRemainingCards={redTeamRemainingCards}\n\t\t\t\t\t\tblueTeamRemainingCards={blueTeamRemainingCards}\n\t\t\t\t\t\tupdateCurrentUserInDB={updateCurrentUserInDB}\n\t\t\t\t\t\tupdateGameStateInDB={updateGameStateInDB}\n\t\t\t\t\t\tupdateCurrentRoundInDB={updateCurrentRoundInDB}\n\t\t\t\t\t\tupdateIsSpymasterTypingInDB={\n\t\t\t\t\t\t\tupdateIsSpymasterTypingInDB\n\t\t\t\t\t\t}\n\t\t\t\t\t\taddClueToDB={addClueToDB}\n\t\t\t\t\t\tupdateWordInDB={updateWordInDB}\n\t\t\t\t\t\tupdateRedTeamRemainingCards={\n\t\t\t\t\t\t\tupdateRedTeamRemainingCards\n\t\t\t\t\t\t}\n\t\t\t\t\t\tupdateBlueTeamRemainingCards={\n\t\t\t\t\t\t\tupdateBlueTeamRemainingCards\n\t\t\t\t\t\t}\n\t\t\t\t\t\tupdateClueInDB={updateClueInDB}\n\t\t\t\t\t\tupdateHasWonInDB={updateHasWonInDB}\n\t\t\t\t\t/>\n\t\t\t\t</Route>\n\t\t\t\t<Route path='/join'>\n\t\t\t\t\t<Join\n\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t\tupdateCurrentUserInDB={updateCurrentUserInDB}\n\t\t\t\t\t/>\n\t\t\t\t</Route>\n\t\t\t\t{/* Keep root path on bottom */}\n\t\t\t\t<Route path='/'>\n\t\t\t\t\t<Home />\n\t\t\t\t</Route>\n\t\t\t\t{/*  */}\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport firebase from \"firebase/app\";\n\nfirebase.initializeApp({\n\tapiKey: process.env.REACT_APP_API_KEY,\n\tauthDomain: process.env.REACT_APP_AUTH_DOMAIN,\n\tdatabaseURL: process.env.REACT_APP_DATABASE_URL,\n\tprojectId: process.env.REACT_APP_PROJECT_ID,\n\tstorageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n\tmessagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n\tappId: process.env.REACT_APP_APP_ID\n});\n\nReactDOM.render(\n\t<React.Fragment>\n\t\t<App />\n\t</React.Fragment>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}